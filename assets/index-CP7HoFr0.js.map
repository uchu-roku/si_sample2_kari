{"version":3,"file":"index-CP7HoFr0.js","sources":["../../node_modules/proj4/lib/global.js","../../node_modules/proj4/lib/constants/values.js","../../node_modules/proj4/lib/constants/PrimeMeridian.js","../../node_modules/proj4/lib/constants/units.js","../../node_modules/proj4/lib/match.js","../../node_modules/proj4/lib/projString.js","../../node_modules/wkt-parser/PROJJSONBuilderBase.js","../../node_modules/wkt-parser/PROJJSONBuilder2015.js","../../node_modules/wkt-parser/PROJJSONBuilder2019.js","../../node_modules/wkt-parser/buildPROJJSON.js","../../node_modules/wkt-parser/detectWKTVersion.js","../../node_modules/wkt-parser/parser.js","../../node_modules/wkt-parser/process.js","../../node_modules/wkt-parser/util.js","../../node_modules/wkt-parser/transformPROJJSON.js","../../node_modules/wkt-parser/index.js","../../node_modules/proj4/lib/defs.js","../../node_modules/proj4/lib/parseCode.js","../../node_modules/proj4/lib/extend.js","../../node_modules/proj4/lib/common/msfnz.js","../../node_modules/proj4/lib/common/sign.js","../../node_modules/proj4/lib/common/adjust_lon.js","../../node_modules/proj4/lib/common/tsfnz.js","../../node_modules/proj4/lib/common/phi2z.js","../../node_modules/proj4/lib/projections/merc.js","../../node_modules/proj4/lib/projections/longlat.js","../../node_modules/proj4/lib/projections.js","../../node_modules/proj4/lib/constants/Ellipsoid.js","../../node_modules/proj4/lib/deriveConstants.js","../../node_modules/proj4/lib/constants/Datum.js","../../node_modules/proj4/lib/datum.js","../../node_modules/proj4/lib/nadgrid.js","../../node_modules/proj4/lib/Proj.js","../../node_modules/proj4/lib/datumUtils.js","../../node_modules/proj4/lib/datum_transform.js","../../node_modules/proj4/lib/adjust_axis.js","../../node_modules/proj4/lib/common/toPoint.js","../../node_modules/proj4/lib/checkSanity.js","../../node_modules/proj4/lib/transform.js","../../node_modules/proj4/lib/core.js","../../node_modules/mgrs/mgrs.js","../../node_modules/proj4/lib/Point.js","../../node_modules/proj4/lib/common/pj_enfn.js","../../node_modules/proj4/lib/common/pj_mlfn.js","../../node_modules/proj4/lib/common/pj_inv_mlfn.js","../../node_modules/proj4/lib/projections/tmerc.js","../../node_modules/proj4/lib/common/sinh.js","../../node_modules/proj4/lib/common/hypot.js","../../node_modules/proj4/lib/common/log1py.js","../../node_modules/proj4/lib/common/asinhy.js","../../node_modules/proj4/lib/common/gatg.js","../../node_modules/proj4/lib/common/clens.js","../../node_modules/proj4/lib/common/cosh.js","../../node_modules/proj4/lib/common/clens_cmplx.js","../../node_modules/proj4/lib/projections/etmerc.js","../../node_modules/proj4/lib/common/adjust_zone.js","../../node_modules/proj4/lib/projections/utm.js","../../node_modules/proj4/lib/common/srat.js","../../node_modules/proj4/lib/projections/gauss.js","../../node_modules/proj4/lib/projections/sterea.js","../../node_modules/proj4/lib/projections/stere.js","../../node_modules/proj4/lib/projections/somerc.js","../../node_modules/proj4/lib/projections/omerc.js","../../node_modules/proj4/lib/projections/lcc.js","../../node_modules/proj4/lib/projections/krovak.js","../../node_modules/proj4/lib/common/mlfn.js","../../node_modules/proj4/lib/common/e0fn.js","../../node_modules/proj4/lib/common/e1fn.js","../../node_modules/proj4/lib/common/e2fn.js","../../node_modules/proj4/lib/common/e3fn.js","../../node_modules/proj4/lib/common/gN.js","../../node_modules/proj4/lib/common/adjust_lat.js","../../node_modules/proj4/lib/common/imlfn.js","../../node_modules/proj4/lib/projections/cass.js","../../node_modules/proj4/lib/common/qsfnz.js","../../node_modules/proj4/lib/projections/laea.js","../../node_modules/proj4/lib/common/asinz.js","../../node_modules/proj4/lib/projections/aea.js","../../node_modules/proj4/lib/projections/gnom.js","../../node_modules/proj4/lib/common/iqsfnz.js","../../node_modules/proj4/lib/projections/cea.js","../../node_modules/proj4/lib/projections/eqc.js","../../node_modules/proj4/lib/projections/poly.js","../../node_modules/proj4/lib/projections/nzmg.js","../../node_modules/proj4/lib/projections/mill.js","../../node_modules/proj4/lib/projections/sinu.js","../../node_modules/proj4/lib/projections/moll.js","../../node_modules/proj4/lib/projections/eqdc.js","../../node_modules/proj4/lib/projections/vandg.js","../../node_modules/proj4/lib/common/vincenty.js","../../node_modules/proj4/lib/projections/aeqd.js","../../node_modules/proj4/lib/projections/ortho.js","../../node_modules/proj4/lib/projections/qsc.js","../../node_modules/proj4/lib/projections/robin.js","../../node_modules/proj4/lib/projections/geocent.js","../../node_modules/proj4/lib/projections/tpers.js","../../node_modules/proj4/lib/projections/geos.js","../../node_modules/proj4/lib/projections/eqearth.js","../../node_modules/proj4/lib/projections/bonne.js","../../node_modules/proj4/projs.js","../../node_modules/proj4/lib/index.js"],"sourcesContent":["export default function (defs) {\n  defs('EPSG:4326', '+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees');\n  defs('EPSG:4269', '+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees');\n  defs('EPSG:3857', '+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs');\n  // UTM WGS84\n  for (var i = 1; i <= 60; ++i) {\n    defs('EPSG:' + (32600 + i), '+proj=utm +zone=' + i + ' +datum=WGS84 +units=m');\n    defs('EPSG:' + (32700 + i), '+proj=utm +zone=' + i + ' +south +datum=WGS84 +units=m');\n  }\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0; // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314; // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI / 2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI / 4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var primeMeridian = {};\n\nprimeMeridian.greenwich = 0.0; // \"0dE\",\nprimeMeridian.lisbon = -9.131906111111; // \"9d07'54.862\\\"W\",\nprimeMeridian.paris = 2.337229166667; // \"2d20'14.025\\\"E\",\nprimeMeridian.bogota = -74.080916666667; // \"74d04'51.3\\\"W\",\nprimeMeridian.madrid = -3.687938888889; // \"3d41'16.58\\\"W\",\nprimeMeridian.rome = 12.452333333333; // \"12d27'8.4\\\"E\",\nprimeMeridian.bern = 7.439583333333; // \"7d26'22.5\\\"E\",\nprimeMeridian.jakarta = 106.807719444444; // \"106d48'27.79\\\"E\",\nprimeMeridian.ferro = -17.666666666667; // \"17d40'W\",\nprimeMeridian.brussels = 4.367975; // \"4d22'4.71\\\"E\",\nprimeMeridian.stockholm = 18.058277777778; // \"18d3'29.8\\\"E\",\nprimeMeridian.athens = 23.7163375; // \"23d42'58.815\\\"E\",\nprimeMeridian.oslo = 10.722916666667; // \"10d43'22.5\\\"E\"\n\nexport default primeMeridian;\n","export default {\n  mm: { to_meter: 0.001 },\n  cm: { to_meter: 0.01 },\n  ft: { to_meter: 0.3048 },\n  'us-ft': { to_meter: 1200 / 3937 },\n  fath: { to_meter: 1.8288 },\n  kmi: { to_meter: 1852 },\n  'us-ch': { to_meter: 20.1168402336805 },\n  'us-mi': { to_meter: 1609.34721869444 },\n  km: { to_meter: 1000 },\n  'ind-ft': { to_meter: 0.30479841 },\n  'ind-yd': { to_meter: 0.91439523 },\n  mi: { to_meter: 1609.344 },\n  yd: { to_meter: 0.9144 },\n  ch: { to_meter: 20.1168 },\n  link: { to_meter: 0.201168 },\n  dm: { to_meter: 0.1 },\n  in: { to_meter: 0.0254 },\n  'ind-ch': { to_meter: 20.11669506 },\n  'us-in': { to_meter: 0.025400050800101 },\n  'us-yd': { to_meter: 0.914401828803658 }\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import { D2R } from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\n/**\n * @param {string} defData\n * @returns {import('./defs').ProjectionDefinition}\n */\nexport default function (defData) {\n  /** @type {import('./defs').ProjectionDefinition} */\n  var self = {};\n  var paramObj = defData.split('+').map(function (v) {\n    return v.trim();\n  }).filter(function (a) {\n    return a;\n  }).reduce(function (p, a) {\n    /** @type {Array<?>} */\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function (v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function (v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function (v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function (v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function (v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function (v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function (v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function (v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function (v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function (v) {\n      self.rectified_grid_angle = parseFloat(v) * D2R;\n    },\n    lonc: function (v) {\n      self.longc = v * D2R;\n    },\n    x_0: function (v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function (v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function (v) {\n      self.a = parseFloat(v);\n    },\n    b: function (v) {\n      self.b = parseFloat(v);\n    },\n    r: function (v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function () {\n      self.R_A = true;\n    },\n    zone: function (v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function () {\n      self.utmSouth = true;\n    },\n    towgs84: function (v) {\n      self.datum_params = v.split(',').map(function (a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function (v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function (v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function (v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function (v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function (v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      } else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function (v) {\n      var legalAxis = 'ewnsud';\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function () {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      } else {\n        self[paramOutname] = paramVal;\n      }\n    } else {\n      self[paramName] = paramVal;\n    }\n  }\n  if (typeof self.datumCode === 'string' && self.datumCode !== 'WGS84') {\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","class PROJJSONBuilderBase {\n  static getId(node) {\n    const idNode = node.find((child) => Array.isArray(child) && child[0] === 'ID');\n    if (idNode && idNode.length >= 3) {\n      return {\n        authority: idNode[1],\n        code: parseInt(idNode[2], 10),\n      };\n    }\n    return null;\n  }\n\n  static convertUnit(node, type = 'unit') {\n    if (!node || node.length < 3) {\n      return { type, name: 'unknown', conversion_factor: null };\n    }\n\n    const name = node[1];\n    const conversionFactor = parseFloat(node[2]) || null;\n\n    const idNode = node.find((child) => Array.isArray(child) && child[0] === 'ID');\n    const id = idNode\n      ? {\n        authority: idNode[1],\n        code: parseInt(idNode[2], 10),\n      }\n      : null;\n\n    return {\n      type,\n      name,\n      conversion_factor: conversionFactor,\n      id,\n    };\n  }\n\n  static convertAxis(node) {\n    const name = node[1] || 'Unknown';\n\n    // Determine the direction\n    let direction;\n    const abbreviationMatch = name.match(/^\\((.)\\)$/); // Match abbreviations like \"(E)\" or \"(N)\"\n    if (abbreviationMatch) {\n      // Use the abbreviation to determine the direction\n      const abbreviation = abbreviationMatch[1].toUpperCase();\n      if (abbreviation === 'E') direction = 'east';\n      else if (abbreviation === 'N') direction = 'north';\n      else if (abbreviation === 'U') direction = 'up';\n      else throw new Error(`Unknown axis abbreviation: ${abbreviation}`);\n    } else {\n      // Use the explicit direction provided in the AXIS node\n      direction = node[2] ? node[2].toLowerCase() : 'unknown';\n    }\n\n    const orderNode = node.find((child) => Array.isArray(child) && child[0] === 'ORDER');\n    const order = orderNode ? parseInt(orderNode[1], 10) : null;\n\n    const unitNode = node.find(\n      (child) =>\n        Array.isArray(child) &&\n        (child[0] === 'LENGTHUNIT' || child[0] === 'ANGLEUNIT' || child[0] === 'SCALEUNIT')\n    );\n    const unit = this.convertUnit(unitNode);\n\n    return {\n      name,\n      direction, // Use the valid PROJJSON direction value\n      unit,\n      order,\n    };\n  }\n\n  static extractAxes(node) {\n    return node\n      .filter((child) => Array.isArray(child) && child[0] === 'AXIS')\n      .map((axis) => this.convertAxis(axis))\n      .sort((a, b) => (a.order || 0) - (b.order || 0)); // Sort by the \"order\" property\n  }\n\n  static convert(node, result = {}) {\n\n    switch (node[0]) {\n      case 'PROJCRS':\n        result.type = 'ProjectedCRS';\n        result.name = node[1];\n        result.base_crs = node.find((child) => Array.isArray(child) && child[0] === 'BASEGEOGCRS')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'BASEGEOGCRS'))\n          : null;\n        result.conversion = node.find((child) => Array.isArray(child) && child[0] === 'CONVERSION')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'CONVERSION'))\n          : null;\n\n        const csNode = node.find((child) => Array.isArray(child) && child[0] === 'CS');\n        if (csNode) {\n          result.coordinate_system = {\n            type: csNode[1],\n            axis: this.extractAxes(node),\n          };\n        }\n\n        const lengthUnitNode = node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT');\n        if (lengthUnitNode) {\n          const unit = this.convertUnit(lengthUnitNode);\n          result.coordinate_system.unit = unit; // Add unit to coordinate_system\n        }\n\n        result.id = this.getId(node);\n        break;\n\n      case 'BASEGEOGCRS':\n      case 'GEOGCRS':\n        result.type = 'GeographicCRS';\n        result.name = node[1];\n      \n        // Handle DATUM or ENSEMBLE\n        const datumOrEnsembleNode = node.find(\n          (child) => Array.isArray(child) && (child[0] === 'DATUM' || child[0] === 'ENSEMBLE')\n        );\n        if (datumOrEnsembleNode) {\n          const datumOrEnsemble = this.convert(datumOrEnsembleNode);\n          if (datumOrEnsembleNode[0] === 'ENSEMBLE') {\n            result.datum_ensemble = datumOrEnsemble;\n          } else {\n            result.datum = datumOrEnsemble;\n          }\n          const primem = node.find((child) => Array.isArray(child) && child[0] === 'PRIMEM');\n          if (primem && primem[1] !== 'Greenwich') {\n            datumOrEnsemble.prime_meridian = {\n              name: primem[1],\n              longitude: parseFloat(primem[2]),\n            }\n          }\n        }\n      \n        result.coordinate_system = {\n          type: 'ellipsoidal',\n          axis: this.extractAxes(node),\n        };\n      \n        result.id = this.getId(node);\n        break;\n\n      case 'DATUM':\n        result.type = 'GeodeticReferenceFrame';\n        result.name = node[1];\n        result.ellipsoid = node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID'))\n          : null;\n        break;\n      \n      case 'ENSEMBLE':\n        result.type = 'DatumEnsemble';\n        result.name = node[1];\n      \n        // Extract ensemble members\n        result.members = node\n          .filter((child) => Array.isArray(child) && child[0] === 'MEMBER')\n          .map((member) => ({\n            type: 'DatumEnsembleMember',\n            name: member[1],\n            id: this.getId(member), // Extract ID as { authority, code }\n          }));\n      \n        // Extract accuracy\n        const accuracyNode = node.find((child) => Array.isArray(child) && child[0] === 'ENSEMBLEACCURACY');\n        if (accuracyNode) {\n          result.accuracy = parseFloat(accuracyNode[1]);\n        }\n      \n        // Extract ellipsoid\n        const ellipsoidNode = node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID');\n        if (ellipsoidNode) {\n          result.ellipsoid = this.convert(ellipsoidNode); // Convert the ellipsoid node\n        }\n      \n        // Extract identifier for the ensemble\n        result.id = this.getId(node);\n        break;\n\n      case 'ELLIPSOID':\n        result.type = 'Ellipsoid';\n        result.name = node[1];\n        result.semi_major_axis = parseFloat(node[2]);\n        result.inverse_flattening = parseFloat(node[3]);\n        const units = node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT'), result)\n          : null;\n        break;\n\n      case 'CONVERSION':\n        result.type = 'Conversion';\n        result.name = node[1];\n        result.method = node.find((child) => Array.isArray(child) && child[0] === 'METHOD')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'METHOD'))\n          : null;\n        result.parameters = node\n          .filter((child) => Array.isArray(child) && child[0] === 'PARAMETER')\n          .map((param) => this.convert(param));\n        break;\n\n      case 'METHOD':\n        result.type = 'Method';\n        result.name = node[1];\n        result.id = this.getId(node);\n        break;\n\n      case 'PARAMETER':\n        result.type = 'Parameter';\n        result.name = node[1];\n        result.value = parseFloat(node[2]);\n        result.unit = this.convertUnit(\n          node.find(\n            (child) =>\n              Array.isArray(child) &&\n              (child[0] === 'LENGTHUNIT' || child[0] === 'ANGLEUNIT' || child[0] === 'SCALEUNIT')\n          )\n        );\n        result.id = this.getId(node);\n        break;\n\n      case 'BOUNDCRS':\n        result.type = 'BoundCRS';\n\n        // Process SOURCECRS\n        const sourceCrsNode = node.find((child) => Array.isArray(child) && child[0] === 'SOURCECRS');\n        if (sourceCrsNode) {\n          const sourceCrsContent = sourceCrsNode.find((child) => Array.isArray(child));\n          result.source_crs = sourceCrsContent ? this.convert(sourceCrsContent) : null;\n        }\n\n        // Process TARGETCRS\n        const targetCrsNode = node.find((child) => Array.isArray(child) && child[0] === 'TARGETCRS');\n        if (targetCrsNode) {\n          const targetCrsContent = targetCrsNode.find((child) => Array.isArray(child));\n          result.target_crs = targetCrsContent ? this.convert(targetCrsContent) : null;\n        }\n\n        // Process ABRIDGEDTRANSFORMATION\n        const transformationNode = node.find((child) => Array.isArray(child) && child[0] === 'ABRIDGEDTRANSFORMATION');\n        if (transformationNode) {\n          result.transformation = this.convert(transformationNode);\n        } else {\n          result.transformation = null;\n        }\n        break;\n\n      case 'ABRIDGEDTRANSFORMATION':\n        result.type = 'Transformation';\n        result.name = node[1];\n        result.method = node.find((child) => Array.isArray(child) && child[0] === 'METHOD')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'METHOD'))\n          : null;\n\n        result.parameters = node\n          .filter((child) => Array.isArray(child) && (child[0] === 'PARAMETER' || child[0] === 'PARAMETERFILE'))\n          .map((param) => {\n            if (param[0] === 'PARAMETER') {\n              return this.convert(param);\n            } else if (param[0] === 'PARAMETERFILE') {\n              return {\n                name: param[1],\n                value: param[2],\n                id: {\n                  'authority': 'EPSG',\n                  'code': 8656\n                }\n              };\n            }\n          });\n\n        // Adjust the Scale difference parameter if present\n        if (result.parameters.length === 7) {\n          const scaleDifference = result.parameters[6];\n          if (scaleDifference.name === 'Scale difference') {\n            scaleDifference.value = Math.round((scaleDifference.value - 1) * 1e12) / 1e6;\n          }\n        }\n\n        result.id = this.getId(node);\n        break;\n      \n      case 'AXIS':\n        if (!result.coordinate_system) {\n          result.coordinate_system = { type: 'unspecified', axis: [] };\n        }\n        result.coordinate_system.axis.push(this.convertAxis(node));\n        break;\n      \n      case 'LENGTHUNIT':\n        const unit = this.convertUnit(node, 'LinearUnit');\n        if (result.coordinate_system && result.coordinate_system.axis) {\n          result.coordinate_system.axis.forEach((axis) => {\n            if (!axis.unit) {\n              axis.unit = unit;\n            }\n          });\n        }\n        if (unit.conversion_factor && unit.conversion_factor !== 1) {\n          if (result.semi_major_axis) {\n            result.semi_major_axis = {\n              value: result.semi_major_axis,\n              unit,\n            }\n          }\n        }\n        break;\n\n      default:\n        result.keyword = node[0];\n        break;\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilderBase;","import PROJJSONBuilderBase from './PROJJSONBuilderBase.js';\n\nclass PROJJSONBuilder2015 extends PROJJSONBuilderBase {\n  static convert(node, result = {}) {\n    super.convert(node, result);\n\n    // Skip `CS` and `USAGE` nodes for WKT2-2015\n    if (result.coordinate_system && result.coordinate_system.subtype === 'Cartesian') {\n      delete result.coordinate_system;\n    }\n    if (result.usage) {\n      delete result.usage;\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilder2015;","import PROJJSONBuilderBase from './PROJJSONBuilderBase.js';\n\nclass PROJJSONBuilder2019 extends PROJJSONBuilderBase {\n  static convert(node, result = {}) {\n    super.convert(node, result);\n\n    // Handle `CS` node for WKT2-2019\n    const csNode = node.find((child) => Array.isArray(child) && child[0] === 'CS');\n    if (csNode) {\n      result.coordinate_system = {\n        subtype: csNode[1],\n        axis: this.extractAxes(node),\n      };\n    }\n\n    // Handle `USAGE` node for WKT2-2019\n    const usageNode = node.find((child) => Array.isArray(child) && child[0] === 'USAGE');\n    if (usageNode) {\n      const scope = usageNode.find((child) => Array.isArray(child) && child[0] === 'SCOPE');\n      const area = usageNode.find((child) => Array.isArray(child) && child[0] === 'AREA');\n      const bbox = usageNode.find((child) => Array.isArray(child) && child[0] === 'BBOX');\n      result.usage = {};\n      if (scope) {\n        result.usage.scope = scope[1];\n      }\n      if (area) {\n        result.usage.area = area[1];\n      }\n      if (bbox) {\n        result.usage.bbox = bbox.slice(1);\n      }\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilder2019;","import PROJJSONBuilder2015 from './PROJJSONBuilder2015.js';\nimport PROJJSONBuilder2019 from './PROJJSONBuilder2019.js';\n\n/**\n * Detects the WKT2 version based on the structure of the WKT.\n * @param {Array} root The root WKT array node.\n * @returns {string} The detected version (\"2015\" or \"2019\").\n */\nfunction detectWKT2Version(root) {\n  // Check for WKT2-2019-specific nodes\n  if (root.find((child) => Array.isArray(child) && child[0] === 'USAGE')) {\n    return '2019'; // `USAGE` is specific to WKT2-2019\n  }\n\n  // Check for WKT2-2015-specific nodes\n  if (root.find((child) => Array.isArray(child) && child[0] === 'CS')) {\n    return '2015'; // `CS` is valid in both, but default to 2015 unless `USAGE` is present\n  }\n\n  if (root[0] === 'BOUNDCRS' || root[0] === 'PROJCRS' || root[0] === 'GEOGCRS') {\n    return '2015'; // These are valid in both, but default to 2015\n  }\n\n  // Default to WKT2-2015 if no specific indicators are found\n  return '2015';\n}\n\n/**\n * Builds a PROJJSON object from a WKT array structure.\n * @param {Array} root The root WKT array node.\n * @returns {Object} The PROJJSON object.\n */\nexport function buildPROJJSON(root) {\n  const version = detectWKT2Version(root);\n  const builder = version === '2019' ? PROJJSONBuilder2019 : PROJJSONBuilder2015;\n  return builder.convert(root);\n}\n","/**\n * Detects whether the WKT string is WKT1 or WKT2.\n * @param {string} wkt The WKT string.\n * @returns {string} The detected version (\"WKT1\" or \"WKT2\").\n */\nexport function detectWKTVersion(wkt) {\n  // Normalize the WKT string for easier keyword matching\n  const normalizedWKT = wkt.toUpperCase();\n\n  // Check for WKT2-specific keywords\n  if (\n    normalizedWKT.includes('PROJCRS') ||\n    normalizedWKT.includes('GEOGCRS') ||\n    normalizedWKT.includes('BOUNDCRS') ||\n    normalizedWKT.includes('VERTCRS') ||\n    normalizedWKT.includes('LENGTHUNIT') ||\n    normalizedWKT.includes('ANGLEUNIT') ||\n    normalizedWKT.includes('SCALEUNIT')\n  ) {\n    return 'WKT2';\n  }\n\n  // Check for WKT1-specific keywords\n  if (\n    normalizedWKT.includes('PROJCS') ||\n    normalizedWKT.includes('GEOGCS') ||\n    normalizedWKT.includes('LOCAL_CS') ||\n    normalizedWKT.includes('VERT_CS') ||\n    normalizedWKT.includes('UNIT')\n  ) {\n    return 'WKT1';\n  }\n\n  // Default to WKT1 if no specific indicators are found\n  return 'WKT1';\n}","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'FITTED_CS':\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'ENGCRS':\n    case 'ENGINEERINGCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      obj[key].type = key;\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\n\nexport function d2r(input) {\n  return input * D2R;\n}\n\nexport function applyProjectionDefaults(wkt) {\n  // Normalize projName for WKT2 compatibility\n  const normalizedProjName = (wkt.projName || '').toLowerCase().replace(/_/g, ' ');\n\n  if (!wkt.long0 && wkt.longc && (normalizedProjName === 'albers conic equal area' || normalizedProjName === 'lambert azimuthal equal area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (normalizedProjName === 'stereographic south pole' || normalizedProjName === 'polar stereographic (variant b)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n    delete wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && (normalizedProjName === 'polar stereographic' || normalizedProjName === 'polar stereographic (variant a)')) {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n    delete wkt.lat1;\n  }\n}","import { applyProjectionDefaults } from './util.js';\n\n// Helper function to process units and to_meter\nfunction processUnit(unit) {\n  let result = { units: null, to_meter: undefined };\n\n  if (typeof unit === 'string') {\n    result.units = unit.toLowerCase();\n    if (result.units === 'metre') {\n      result.units = 'meter'; // Normalize 'metre' to 'meter'\n    }\n    if (result.units === 'meter') {\n      result.to_meter = 1; // Only set to_meter if units are 'meter'\n    }\n  } else if (unit && unit.name) {\n    result.units = unit.name.toLowerCase();\n    if (result.units === 'metre') {\n      result.units = 'meter'; // Normalize 'metre' to 'meter'\n    }\n    result.to_meter = unit.conversion_factor;\n  }\n\n  return result;\n}\n\nfunction toValue(valueOrObject) {\n  if (typeof valueOrObject === 'object') {\n    return valueOrObject.value * valueOrObject.unit.conversion_factor;\n  }\n  return valueOrObject;\n}\n\nfunction calculateEllipsoid(value, result) {\n  if (value.ellipsoid.radius) {\n    result.a = value.ellipsoid.radius;\n    result.rf = 0;\n  } else {\n    result.a = toValue(value.ellipsoid.semi_major_axis);\n    if (value.ellipsoid.inverse_flattening !== undefined) {\n      result.rf = value.ellipsoid.inverse_flattening;\n    } else if (value.ellipsoid.semi_major_axis !== undefined && value.ellipsoid.semi_minor_axis !== undefined) {\n      result.rf = result.a / (result.a - toValue(value.ellipsoid.semi_minor_axis));\n    }\n  }\n}\n\nexport function transformPROJJSON(projjson, result = {}) {\n  if (!projjson || typeof projjson !== 'object') {\n    return projjson; // Return primitive values as-is\n  }\n\n  if (projjson.type === 'BoundCRS') {\n    transformPROJJSON(projjson.source_crs, result);\n\n    if (projjson.transformation) {\n      if (projjson.transformation.method && projjson.transformation.method.name === 'NTv2') {\n        // Set nadgrids to the filename from the parameterfile\n        result.nadgrids = projjson.transformation.parameters[0].value;\n      } else {\n        // Populate datum_params if no parameterfile is found\n        result.datum_params = projjson.transformation.parameters.map((param) => param.value);\n      }\n    }\n    return result; // Return early for BoundCRS\n  }\n\n  // Handle specific keys in PROJJSON\n  Object.keys(projjson).forEach((key) => {\n    const value = projjson[key];\n    if (value === null) {\n      return;\n    }\n\n    switch (key) {\n      case 'name':\n        if (result.srsCode) {\n          break;\n        }\n        result.name = value;\n        result.srsCode = value; // Map `name` to `srsCode`\n        break;\n\n      case 'type':\n        if (value === 'GeographicCRS') {\n          result.projName = 'longlat';\n        } else if (value === 'ProjectedCRS' && projjson.conversion && projjson.conversion.method) {\n          result.projName = projjson.conversion.method.name; // Retain original capitalization\n        }\n        break;\n\n      case 'datum':\n      case 'datum_ensemble': // Handle both datum and ensemble\n        if (value.ellipsoid) {\n          // Extract ellipsoid properties\n          result.ellps = value.ellipsoid.name;\n          calculateEllipsoid(value, result);\n        }\n        if (value.prime_meridian) {\n          result.from_greenwich = value.prime_meridian.longitude * Math.PI / 180; // Convert to radians\n        }\n        break;\n\n      case 'ellipsoid':\n        result.ellps = value.name;\n        calculateEllipsoid(value, result);\n        break;\n\n      case 'prime_meridian':\n        result.long0 = (value.longitude || 0) * Math.PI / 180; // Convert to radians\n        break;\n\n      case 'coordinate_system':\n        if (value.axis) {\n          result.axis = value.axis\n            .map((axis) => {\n              const direction = axis.direction;\n              if (direction === 'east') return 'e';\n              if (direction === 'north') return 'n';\n              if (direction === 'west') return 'w';\n              if (direction === 'south') return 's';\n              throw new Error(`Unknown axis direction: ${direction}`);\n            })\n            .join('') + 'u'; // Combine into a single string (e.g., \"enu\")\n\n          if (value.unit) {\n            const { units, to_meter } = processUnit(value.unit);\n            result.units = units;\n            result.to_meter = to_meter;\n          } else if (value.axis[0] && value.axis[0].unit) {\n            const { units, to_meter } = processUnit(value.axis[0].unit);\n            result.units = units;\n            result.to_meter = to_meter;\n          }\n        }\n        break;\n        \n      case 'id':\n        if (value.authority && value.code) {\n          result.title = value.authority + ':' + value.code;\n        }\n        break;\n\n      case 'conversion':\n        if (value.method && value.method.name) {\n          result.projName = value.method.name; // Retain original capitalization\n        }\n        if (value.parameters) {\n          value.parameters.forEach((param) => {\n            const paramName = param.name.toLowerCase().replace(/\\s+/g, '_');\n            const paramValue = param.value;\n            if (param.unit && param.unit.conversion_factor) {\n              result[paramName] = paramValue * param.unit.conversion_factor; // Convert to radians or meters\n            } else if (param.unit === 'degree') {\n              result[paramName] = paramValue * Math.PI / 180; // Convert to radians\n            } else {\n              result[paramName] = paramValue;\n            }\n          });\n        }\n        break;\n\n      case 'unit':\n        if (value.name) {\n          result.units = value.name.toLowerCase();\n          if (result.units === 'metre') {\n            result.units = 'meter';\n          }\n        }\n        if (value.conversion_factor) {\n          result.to_meter = value.conversion_factor;\n        }\n        break;\n\n      case 'base_crs':\n        transformPROJJSON(value, result); // Pass `result` directly\n        result.datumCode = value.id ? value.id.authority + '_' + value.id.code : value.name; // Set datumCode\n        break;\n\n      default:\n        // Ignore irrelevant or unneeded properties\n        break;\n    }\n  });\n\n  // Additional calculated properties\n  if (result.latitude_of_false_origin !== undefined) {\n    result.lat0 = result.latitude_of_false_origin; // Already in radians\n  }\n  if (result.longitude_of_false_origin !== undefined) {\n    result.long0 = result.longitude_of_false_origin;\n  }\n  if (result.latitude_of_standard_parallel !== undefined) {\n    result.lat0 = result.latitude_of_standard_parallel;\n    result.lat1 = result.latitude_of_standard_parallel;\n  }\n  if (result.latitude_of_1st_standard_parallel !== undefined) {\n    result.lat1 = result.latitude_of_1st_standard_parallel;\n  }\n  if (result.latitude_of_2nd_standard_parallel !== undefined) {\n    result.lat2 = result.latitude_of_2nd_standard_parallel; \n  }\n  if (result.latitude_of_projection_centre !== undefined) {\n    result.lat0 = result.latitude_of_projection_centre;\n  }\n  if (result.longitude_of_projection_centre !== undefined) {\n    result.longc = result.longitude_of_projection_centre;\n  }\n  if (result.easting_at_false_origin !== undefined) {\n    result.x0 = result.easting_at_false_origin;\n  }\n  if (result.northing_at_false_origin !== undefined) {\n    result.y0 = result.northing_at_false_origin;\n  }\n  if (result.latitude_of_natural_origin !== undefined) {\n    result.lat0 = result.latitude_of_natural_origin;\n  }\n  if (result.longitude_of_natural_origin !== undefined) {\n    result.long0 = result.longitude_of_natural_origin;\n  }\n  if (result.longitude_of_origin !== undefined) {\n    result.long0 = result.longitude_of_origin;\n  }\n  if (result.false_easting !== undefined) {\n    result.x0 = result.false_easting;\n  }\n  if (result.easting_at_projection_centre) {\n    result.x0 = result.easting_at_projection_centre;\n  }\n  if (result.false_northing !== undefined) {\n    result.y0 = result.false_northing;\n  }\n  if (result.northing_at_projection_centre) {\n    result.y0 = result.northing_at_projection_centre;\n  }\n  if (result.standard_parallel_1 !== undefined) {\n    result.lat1 = result.standard_parallel_1;\n  }\n  if (result.standard_parallel_2 !== undefined) {\n    result.lat2 = result.standard_parallel_2;\n  }\n  if (result.scale_factor_at_natural_origin !== undefined) {\n    result.k0 = result.scale_factor_at_natural_origin;\n  }\n  if (result.scale_factor_at_projection_centre !== undefined) {\n    result.k0 = result.scale_factor_at_projection_centre;\n  }\n  if (result.scale_factor_on_pseudo_standard_parallel !== undefined) {  \n    result.k0 = result.scale_factor_on_pseudo_standard_parallel;\n  }\n  if (result.azimuth !== undefined) {\n    result.alpha = result.azimuth;\n  }\n  if (result.azimuth_at_projection_centre !== undefined) {\n    result.alpha = result.azimuth_at_projection_centre;\n  }\n  if (result.angle_from_rectified_to_skew_grid) {\n    result.rectified_grid_angle = result.angle_from_rectified_to_skew_grid;\n  }\n\n  // Apply projection defaults\n  applyProjectionDefaults(result);\n\n  return result;\n}","import { buildPROJJSON } from './buildPROJJSON.js';\nimport { detectWKTVersion } from './detectWKTVersion.js';\nimport parser from './parser.js';\nimport {sExpr} from './process.js';\nimport { transformPROJJSON } from './transformPROJJSON.js';\nimport { applyProjectionDefaults, d2r } from './util.js';\n\nvar knownTypes = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS', 'GEOCCS', 'PROJCS', 'LOCAL_CS', 'GEODCRS',\n  'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction cleanWKT(wkt) {\n  var keys = Object.keys(wkt);\n  for (var i = 0, ii = keys.length; i <ii; ++i) {\n    var key = keys[i];\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    if (knownTypes.indexOf(key) !== -1) {\n      setPropertiesFromWkt(wkt[key]);\n    }\n    if (typeof wkt[key] === 'object') {\n      cleanWKT(wkt[key]);\n    }\n  }\n}\n\nfunction setPropertiesFromWkt(wkt) {\n  if (wkt.AUTHORITY) {\n    var authority = Object.keys(wkt.AUTHORITY)[0];\n    if (authority && authority in wkt.AUTHORITY) {\n      wkt.title = authority + ':' + wkt.AUTHORITY[authority];\n    }\n  }\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode === 'belge_1972') {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n  if (wkt.rectified_grid_angle) {\n    wkt.rectified_grid_angle = d2r(wkt.rectified_grid_angle);\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  applyProjectionDefaults(wkt);\n}\nexport default function(wkt) {\n  if (typeof wkt === 'object') {\n    return transformPROJJSON(wkt);\n  }\n  const version = detectWKTVersion(wkt);\n  var lisp = parser(wkt);\n  if (version === 'WKT2') {\n    const projjson = buildPROJJSON(lisp);\n    return transformPROJJSON(projjson);\n  }\n  var type = lisp[0];\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj[type];\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\n/**\n * @typedef {Object} ProjectionDefinition\n * @property {string} title\n * @property {string} [projName]\n * @property {string} [ellps]\n * @property {import('./Proj.js').DatumDefinition} [datum]\n * @property {string} [datumName]\n * @property {number} [rf]\n * @property {number} [lat0]\n * @property {number} [lat1]\n * @property {number} [lat2]\n * @property {number} [lat_ts]\n * @property {number} [long0]\n * @property {number} [long1]\n * @property {number} [long2]\n * @property {number} [alpha]\n * @property {number} [longc]\n * @property {number} [x0]\n * @property {number} [y0]\n * @property {number} [k0]\n * @property {number} [a]\n * @property {number} [b]\n * @property {true} [R_A]\n * @property {number} [zone]\n * @property {true} [utmSouth]\n * @property {string|Array<number>} [datum_params]\n * @property {number} [to_meter]\n * @property {string} [units]\n * @property {number} [from_greenwich]\n * @property {string} [datumCode]\n * @property {string} [nadgrids]\n * @property {string} [axis]\n * @property {boolean} [sphere]\n * @property {number} [rectified_grid_angle]\n * @property {boolean} [approx]\n * @property {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} inverse\n * @property {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} forward\n */\n\n/**\n * @overload\n * @param {string} name\n * @param {string|ProjectionDefinition|import('./core.js').PROJJSONDefinition} projection\n * @returns {void}\n */\n/**\n * @overload\n * @param {Array<[string, string]>} name\n * @returns {Array<ProjectionDefinition|undefined>}\n */\n/**\n * @overload\n * @param {string} name\n * @returns {ProjectionDefinition}\n */\n\n/**\n * @param {string | Array<Array<string>> | Partial<Record<'EPSG'|'ESRI'|'IAU2000', ProjectionDefinition>>} name\n * @returns {ProjectionDefinition | Array<ProjectionDefinition|undefined> | void}\n */\nfunction defs(name) {\n  /* global console */\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[/** @type {string} */ (name)] = parseProj(arguments[1]);\n      } else {\n        defs[/** @type {string} */ (name)] = wkt(arguments[1]);\n      }\n    } else {\n      defs[/** @type {string} */ (name)] = def;\n    }\n  } else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function (v) {\n        if (Array.isArray(v)) {\n          return defs.apply(that, v);\n        } else {\n          return defs(v);\n        }\n      });\n    } else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    } else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    } else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    } else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    } else {\n      console.log(name);\n    }\n    return;\n  }\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code) {\n  return typeof code === 'string';\n}\nfunction testDef(code) {\n  return code in defs;\n}\nfunction testWKT(code) {\n  return (code.indexOf('+') !== 0 && code.indexOf('[') !== -1) || (typeof code === 'object' && !('srsCode' in code));\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code) {\n  return code[0] === '+';\n}\n/**\n * @param {string | import('./core').PROJJSONDefinition | import('./defs').ProjectionDefinition} code\n * @returns {import('./defs').ProjectionDefinition}\n */\nfunction parse(code) {\n  if (testObj(code)) {\n    // check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  } else if (!('projName' in code)) {\n    return wkt(code);\n  } else {\n    return code;\n  }\n}\n\nexport default parse;\n","export default function (destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function (eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n","export default function (x) {\n  return x < 0 ? -1 : 1;\n}\n","import { TWO_PI, SPI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  // console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport { FORTPI, R2D, EPSLN, HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} e\n * @property {number} k\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if (!('x0' in this)) {\n    this.x0 = 0;\n  }\n  if (!('y0' in this)) {\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    } else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  } else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      } else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  -------------------------------------------------- */\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  } else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    } else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  -------------------------------------------------- */\nexport function inverse(p) {\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  } else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mercator', 'Popular Visualisation Pseudo Mercator', 'Mercator_1SP', 'Mercator_Auxiliary_Sphere', 'Mercator_Variant_A', 'merc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  // no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport { identity as forward };\nexport { identity as inverse };\nexport var names = ['longlat', 'identity'];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from './projections/merc';\nimport longlat from './projections/longlat';\n/** @type {Array<Partial<import('./Proj').default>>} */\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\n/**\n * @param {import('./Proj').default} proj\n * @param {number} i\n */\nexport function add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function (n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport function getNormalizedProjName(n) {\n  return n.replace(/[-\\(\\)\\s]+/g, ' ').trim().replace(/ /g, '_');\n}\n\n/**\n * Get a projection by name.\n * @param {string} name\n * @returns {import('./Proj').default|false}\n */\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n  n = getNormalizedProjName(n);\n  if (n in names && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var ellipsoids = {\n  MERIT: {\n    a: 6378137,\n    rf: 298.257,\n    ellipseName: 'MERIT 1983'\n  },\n  SGS85: {\n    a: 6378136,\n    rf: 298.257,\n    ellipseName: 'Soviet Geodetic System 85'\n  },\n  GRS80: {\n    a: 6378137,\n    rf: 298.257222101,\n    ellipseName: 'GRS 1980(IUGG, 1980)'\n  },\n  IAU76: {\n    a: 6378140,\n    rf: 298.257,\n    ellipseName: 'IAU 1976'\n  },\n  airy: {\n    a: 6377563.396,\n    b: 6356256.91,\n    ellipseName: 'Airy 1830'\n  },\n  APL4: {\n    a: 6378137,\n    rf: 298.25,\n    ellipseName: 'Appl. Physics. 1965'\n  },\n  NWL9D: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'Naval Weapons Lab., 1965'\n  },\n  mod_airy: {\n    a: 6377340.189,\n    b: 6356034.446,\n    ellipseName: 'Modified Airy'\n  },\n  andrae: {\n    a: 6377104.43,\n    rf: 300,\n    ellipseName: 'Andrae 1876 (Den., Iclnd.)'\n  },\n  aust_SA: {\n    a: 6378160,\n    rf: 298.25,\n    ellipseName: 'Australian Natl & S. Amer. 1969'\n  },\n  GRS67: {\n    a: 6378160,\n    rf: 298.247167427,\n    ellipseName: 'GRS 67(IUGG 1967)'\n  },\n  bessel: {\n    a: 6377397.155,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841'\n  },\n  bess_nam: {\n    a: 6377483.865,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841 (Namibia)'\n  },\n  clrk66: {\n    a: 6378206.4,\n    b: 6356583.8,\n    ellipseName: 'Clarke 1866'\n  },\n  clrk80: {\n    a: 6378249.145,\n    rf: 293.4663,\n    ellipseName: 'Clarke 1880 mod.'\n  },\n  clrk80ign: {\n    a: 6378249.2,\n    b: 6356515,\n    rf: 293.4660213,\n    ellipseName: 'Clarke 1880 (IGN)'\n  },\n  clrk58: {\n    a: 6378293.645208759,\n    rf: 294.2606763692654,\n    ellipseName: 'Clarke 1858'\n  },\n  CPM: {\n    a: 6375738.7,\n    rf: 334.29,\n    ellipseName: 'Comm. des Poids et Mesures 1799'\n  },\n  delmbr: {\n    a: 6376428,\n    rf: 311.5,\n    ellipseName: 'Delambre 1810 (Belgium)'\n  },\n  engelis: {\n    a: 6378136.05,\n    rf: 298.2566,\n    ellipseName: 'Engelis 1985'\n  },\n  evrst30: {\n    a: 6377276.345,\n    rf: 300.8017,\n    ellipseName: 'Everest 1830'\n  },\n  evrst48: {\n    a: 6377304.063,\n    rf: 300.8017,\n    ellipseName: 'Everest 1948'\n  },\n  evrst56: {\n    a: 6377301.243,\n    rf: 300.8017,\n    ellipseName: 'Everest 1956'\n  },\n  evrst69: {\n    a: 6377295.664,\n    rf: 300.8017,\n    ellipseName: 'Everest 1969'\n  },\n  evrstSS: {\n    a: 6377298.556,\n    rf: 300.8017,\n    ellipseName: 'Everest (Sabah & Sarawak)'\n  },\n  fschr60: {\n    a: 6378166,\n    rf: 298.3,\n    ellipseName: 'Fischer (Mercury Datum) 1960'\n  },\n  fschr60m: {\n    a: 6378155,\n    rf: 298.3,\n    ellipseName: 'Fischer 1960'\n  },\n  fschr68: {\n    a: 6378150,\n    rf: 298.3,\n    ellipseName: 'Fischer 1968'\n  },\n  helmert: {\n    a: 6378200,\n    rf: 298.3,\n    ellipseName: 'Helmert 1906'\n  },\n  hough: {\n    a: 6378270,\n    rf: 297,\n    ellipseName: 'Hough'\n  },\n  intl: {\n    a: 6378388,\n    rf: 297,\n    ellipseName: 'International 1909 (Hayford)'\n  },\n  kaula: {\n    a: 6378163,\n    rf: 298.24,\n    ellipseName: 'Kaula 1961'\n  },\n  lerch: {\n    a: 6378139,\n    rf: 298.257,\n    ellipseName: 'Lerch 1979'\n  },\n  mprts: {\n    a: 6397300,\n    rf: 191,\n    ellipseName: 'Maupertius 1738'\n  },\n  new_intl: {\n    a: 6378157.5,\n    b: 6356772.2,\n    ellipseName: 'New International 1967'\n  },\n  plessis: {\n    a: 6376523,\n    rf: 6355863,\n    ellipseName: 'Plessis 1817 (France)'\n  },\n  krass: {\n    a: 6378245,\n    rf: 298.3,\n    ellipseName: 'Krassovsky, 1942'\n  },\n  SEasia: {\n    a: 6378155,\n    b: 6356773.3205,\n    ellipseName: 'Southeast Asia'\n  },\n  walbeck: {\n    a: 6376896,\n    b: 6355834.8467,\n    ellipseName: 'Walbeck'\n  },\n  WGS60: {\n    a: 6378165,\n    rf: 298.3,\n    ellipseName: 'WGS 60'\n  },\n  WGS66: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'WGS 66'\n  },\n  WGS7: {\n    a: 6378135,\n    rf: 298.26,\n    ellipseName: 'WGS 72'\n  },\n  WGS84: {\n    a: 6378137,\n    rf: 298.257223563,\n    ellipseName: 'WGS 84'\n  },\n  sphere: {\n    a: 6370997,\n    b: 6370997,\n    ellipseName: 'Normal Sphere (r=6370997)'\n  }\n};\n\nexport default ellipsoids;\n","import { SIXTH, RA4, RA6, EPSLN } from './constants/values';\nimport { default as Ellipsoid } from './constants/Ellipsoid';\nimport match from './match';\n\nconst WGS84 = Ellipsoid.WGS84; // default ellipsoid\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var datums = {\n  wgs84: {\n    towgs84: '0,0,0',\n    ellipse: 'WGS84',\n    datumName: 'WGS84'\n  },\n  ch1903: {\n    towgs84: '674.374,15.056,405.346',\n    ellipse: 'bessel',\n    datumName: 'swiss'\n  },\n  ggrs87: {\n    towgs84: '-199.87,74.79,246.62',\n    ellipse: 'GRS80',\n    datumName: 'Greek_Geodetic_Reference_System_1987'\n  },\n  nad83: {\n    towgs84: '0,0,0',\n    ellipse: 'GRS80',\n    datumName: 'North_American_Datum_1983'\n  },\n  nad27: {\n    nadgrids: '@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat',\n    ellipse: 'clrk66',\n    datumName: 'North_American_Datum_1927'\n  },\n  potsdam: {\n    towgs84: '598.1,73.7,418.2,0.202,0.045,-2.455,6.7',\n    ellipse: 'bessel',\n    datumName: 'Potsdam Rauenberg 1950 DHDN'\n  },\n  carthage: {\n    towgs84: '-263.0,6.0,431.0',\n    ellipse: 'clark80',\n    datumName: 'Carthage 1934 Tunisia'\n  },\n  hermannskogel: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Hermannskogel'\n  },\n  mgi: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Militar-Geographische Institut'\n  },\n  osni52: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'airy',\n    datumName: 'Irish National'\n  },\n  ire65: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'mod_airy',\n    datumName: 'Ireland 1965'\n  },\n  rassadiran: {\n    towgs84: '-133.63,-157.5,-158.62',\n    ellipse: 'intl',\n    datumName: 'Rassadiran'\n  },\n  nzgd49: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993',\n    ellipse: 'intl',\n    datumName: 'New Zealand Geodetic Datum 1949'\n  },\n  osgb36: {\n    towgs84: '446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894',\n    ellipse: 'airy',\n    datumName: 'Ordnance Survey of Great Britain 1936'\n  },\n  s_jtsk: {\n    towgs84: '589,76,480',\n    ellipse: 'bessel',\n    datumName: 'S-JTSK (Ferro)'\n  },\n  beduaram: {\n    towgs84: '-106,-87,188',\n    ellipse: 'clrk80',\n    datumName: 'Beduaram'\n  },\n  gunung_segara: {\n    towgs84: '-403,684,41',\n    ellipse: 'bessel',\n    datumName: 'Gunung Segara Jakarta'\n  },\n  rnb72: {\n    towgs84: '106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1',\n    ellipse: 'intl',\n    datumName: 'Reseau National Belge 1972'\n  },\n  EPSG_5451: {\n    towgs84: '6.41,-49.05,-11.28,1.5657,0.5242,6.9718,-5.7649'\n  },\n  IGNF_LURESG: {\n    towgs84: '-192.986,13.673,-39.309,-0.4099,-2.9332,2.6881,0.43'\n  },\n  EPSG_4614: {\n    towgs84: '-119.4248,-303.65872,-11.00061,1.164298,0.174458,1.096259,3.657065'\n  },\n  EPSG_4615: {\n    towgs84: '-494.088,-312.129,279.877,-1.423,-1.013,1.59,-0.748'\n  },\n  ESRI_37241: {\n    towgs84: '-76.822,257.457,-12.817,2.136,-0.033,-2.392,-0.031'\n  },\n  ESRI_37249: {\n    towgs84: '-440.296,58.548,296.265,1.128,10.202,4.559,-0.438'\n  },\n  ESRI_37245: {\n    towgs84: '-511.151,-181.269,139.609,1.05,2.703,1.798,3.071'\n  },\n  EPSG_4178: {\n    towgs84: '24.9,-126.4,-93.2,-0.063,-0.247,-0.041,1.01'\n  },\n  EPSG_4622: {\n    towgs84: '-472.29,-5.63,-304.12,0.4362,-0.8374,0.2563,1.8984'\n  },\n  EPSG_4625: {\n    towgs84: '126.93,547.94,130.41,-2.7867,5.1612,-0.8584,13.8227'\n  },\n  EPSG_5252: {\n    towgs84: '0.023,0.036,-0.068,0.00176,0.00912,-0.01136,0.00439'\n  },\n  EPSG_4314: {\n    towgs84: '597.1,71.4,412.1,0.894,0.068,-1.563,7.58'\n  },\n  EPSG_4282: {\n    towgs84: '-178.3,-316.7,-131.5,5.278,6.077,10.979,19.166'\n  },\n  EPSG_4231: {\n    towgs84: '-83.11,-97.38,-117.22,0.0276,-0.2167,0.2147,0.1218'\n  },\n  EPSG_4274: {\n    towgs84: '-230.994,102.591,25.199,0.633,-0.239,0.9,1.95'\n  },\n  EPSG_4134: {\n    towgs84: '-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.71006'\n  },\n  EPSG_4254: {\n    towgs84: '18.38,192.45,96.82,0.056,-0.142,-0.2,-0.0013'\n  },\n  EPSG_4159: {\n    towgs84: '-194.513,-63.978,-25.759,-3.4027,3.756,-3.352,-0.9175'\n  },\n  EPSG_4687: {\n    towgs84: '0.072,-0.507,-0.245,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_4227: {\n    towgs84: '-83.58,-397.54,458.78,-17.595,-2.847,4.256,3.225'\n  },\n  EPSG_4746: {\n    towgs84: '599.4,72.4,419.2,-0.062,-0.022,-2.723,6.46'\n  },\n  EPSG_4745: {\n    towgs84: '612.4,77,440.2,-0.054,0.057,-2.797,2.55'\n  },\n  EPSG_6311: {\n    towgs84: '8.846,-4.394,-1.122,-0.00237,-0.146528,0.130428,0.783926'\n  },\n  EPSG_4289: {\n    towgs84: '565.7381,50.4018,465.2904,-1.91514,1.60363,-9.09546,4.07244'\n  },\n  EPSG_4230: {\n    towgs84: '-68.863,-134.888,-111.49,-0.53,-0.14,0.57,-3.4'\n  },\n  EPSG_4154: {\n    towgs84: '-123.02,-158.95,-168.47'\n  },\n  EPSG_4156: {\n    towgs84: '570.8,85.7,462.8,4.998,1.587,5.261,3.56'\n  },\n  EPSG_4299: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4179: {\n    towgs84: '33.4,-146.6,-76.3,-0.359,-0.053,0.844,-0.84'\n  },\n  EPSG_4313: {\n    towgs84: '-106.8686,52.2978,-103.7239,0.3366,-0.457,1.8422,-1.2747'\n  },\n  EPSG_4194: {\n    towgs84: '163.511,127.533,-159.789'\n  },\n  EPSG_4195: {\n    towgs84: '105,326,-102.5'\n  },\n  EPSG_4196: {\n    towgs84: '-45,417,-3.5'\n  },\n  EPSG_4611: {\n    towgs84: '-162.619,-276.959,-161.764,0.067753,-2.243649,-1.158827,-1.094246'\n  },\n  EPSG_4633: {\n    towgs84: '137.092,131.66,91.475,-1.9436,-11.5993,-4.3321,-7.4824'\n  },\n  EPSG_4641: {\n    towgs84: '-408.809,366.856,-412.987,1.8842,-0.5308,2.1655,-121.0993'\n  },\n  EPSG_4643: {\n    towgs84: '-480.26,-438.32,-643.429,16.3119,20.1721,-4.0349,-111.7002'\n  },\n  EPSG_4300: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4188: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4660: {\n    towgs84: '982.6087,552.753,-540.873,32.39344,-153.25684,-96.2266,16.805'\n  },\n  EPSG_4662: {\n    towgs84: '97.295,-263.247,310.882,-1.5999,0.8386,3.1409,13.3259'\n  },\n  EPSG_3906: {\n    towgs84: '577.88891,165.22205,391.18289,4.9145,-0.94729,-13.05098,7.78664'\n  },\n  EPSG_4307: {\n    towgs84: '-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547'\n  },\n  EPSG_6892: {\n    towgs84: '-76.269,-16.683,68.562,-6.275,10.536,-4.286,-13.686'\n  },\n  EPSG_4690: {\n    towgs84: '221.597,152.441,176.523,2.403,1.3893,0.884,11.4648'\n  },\n  EPSG_4691: {\n    towgs84: '218.769,150.75,176.75,3.5231,2.0037,1.288,10.9817'\n  },\n  EPSG_4629: {\n    towgs84: '72.51,345.411,79.241,-1.5862,-0.8826,-0.5495,1.3653'\n  },\n  EPSG_4630: {\n    towgs84: '165.804,216.213,180.26,-0.6251,-0.4515,-0.0721,7.4111'\n  },\n  EPSG_4692: {\n    towgs84: '217.109,86.452,23.711,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_9333: {\n    towgs84: '0,0,0,-8.393,0.749,-10.276,0'\n  },\n  EPSG_9059: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4312: {\n    towgs84: '601.705,84.263,485.227,4.7354,1.3145,5.393,-2.3887'\n  },\n  EPSG_4123: {\n    towgs84: '-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496'\n  },\n  EPSG_4309: {\n    towgs84: '-124.45,183.74,44.64,-0.4384,0.5446,-0.9706,-2.1365'\n  },\n  ESRI_104106: {\n    towgs84: '-283.088,-70.693,117.445,-1.157,0.059,-0.652,-4.058'\n  },\n  EPSG_4281: {\n    towgs84: '-219.247,-73.802,269.529'\n  },\n  EPSG_4322: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4324: {\n    towgs84: '0,0,1.9'\n  },\n  EPSG_4284: {\n    towgs84: '43.822,-108.842,-119.585,1.455,-0.761,0.737,0.549'\n  },\n  EPSG_4277: {\n    towgs84: '446.448,-125.157,542.06,0.15,0.247,0.842,-20.489'\n  },\n  EPSG_4207: {\n    towgs84: '-282.1,-72.2,120,-1.529,0.145,-0.89,-4.46'\n  },\n  EPSG_4688: {\n    towgs84: '347.175,1077.618,2623.677,33.9058,-70.6776,9.4013,186.0647'\n  },\n  EPSG_4689: {\n    towgs84: '410.793,54.542,80.501,-2.5596,-2.3517,-0.6594,17.3218'\n  },\n  EPSG_4720: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4273: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  EPSG_4240: {\n    towgs84: '204.64,834.74,293.8'\n  },\n  EPSG_4817: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  ESRI_104131: {\n    towgs84: '426.62,142.62,460.09,4.98,4.49,-12.42,-17.1'\n  },\n  EPSG_4265: {\n    towgs84: '-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68'\n  },\n  EPSG_4263: {\n    towgs84: '-111.92,-87.85,114.5,1.875,0.202,0.219,0.032'\n  },\n  EPSG_4298: {\n    towgs84: '-689.5937,623.84046,-65.93566,-0.02331,1.17094,-0.80054,5.88536'\n  },\n  EPSG_4270: {\n    towgs84: '-253.4392,-148.452,386.5267,0.15605,0.43,-0.1013,-0.0424'\n  },\n  EPSG_4229: {\n    towgs84: '-121.8,98.1,-10.7'\n  },\n  EPSG_4220: {\n    towgs84: '-55.5,-348,-229.2'\n  },\n  EPSG_4214: {\n    towgs84: '12.646,-155.176,-80.863'\n  },\n  EPSG_4232: {\n    towgs84: '-345,3,223'\n  },\n  EPSG_4238: {\n    towgs84: '-1.977,-13.06,-9.993,0.364,0.254,0.689,-1.037'\n  },\n  EPSG_4168: {\n    towgs84: '-170,33,326'\n  },\n  EPSG_4131: {\n    towgs84: '199,931,318.9'\n  },\n  EPSG_4152: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_5228: {\n    towgs84: '572.213,85.334,461.94,4.9732,1.529,5.2484,3.5378'\n  },\n  EPSG_8351: {\n    towgs84: '485.021,169.465,483.839,7.786342,4.397554,4.102655,0'\n  },\n  EPSG_4683: {\n    towgs84: '-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06'\n  },\n  EPSG_4133: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7373: {\n    towgs84: '0.819,-0.5762,-1.6446,-0.00378,-0.03317,0.00318,0.0693'\n  },\n  EPSG_9075: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9072: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9294: {\n    towgs84: '1.16835,-1.42001,-2.24431,-0.00822,-0.05508,0.01818,0.23388'\n  },\n  EPSG_4212: {\n    towgs84: '-267.434,173.496,181.814,-13.4704,8.7154,7.3926,14.7492'\n  },\n  EPSG_4191: {\n    towgs84: '-44.183,-0.58,-38.489,2.3867,2.7072,-3.5196,-8.2703'\n  },\n  EPSG_4237: {\n    towgs84: '52.684,-71.194,-13.975,-0.312,-0.1063,-0.3729,1.0191'\n  },\n  EPSG_4740: {\n    towgs84: '-1.08,-0.27,-0.9'\n  },\n  EPSG_4124: {\n    towgs84: '419.3836,99.3335,591.3451,0.850389,1.817277,-7.862238,-0.99496'\n  },\n  EPSG_5681: {\n    towgs84: '584.9636,107.7175,413.8067,1.1155,0.2824,-3.1384,7.9922'\n  },\n  EPSG_4141: {\n    towgs84: '23.772,17.49,17.859,-0.3132,-1.85274,1.67299,-5.4262'\n  },\n  EPSG_4204: {\n    towgs84: '-85.645,-273.077,-79.708,2.289,-1.421,2.532,3.194'\n  },\n  EPSG_4319: {\n    towgs84: '226.702,-193.337,-35.371,-2.229,-4.391,9.238,0.9798'\n  },\n  EPSG_4200: {\n    towgs84: '24.82,-131.21,-82.66'\n  },\n  EPSG_4130: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4127: {\n    towgs84: '-82.875,-57.097,-156.768,-2.158,1.524,-0.982,-0.359'\n  },\n  EPSG_4149: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4617: {\n    towgs84: '-0.991,1.9072,0.5129,1.25033e-7,4.6785e-8,5.6529e-8,0'\n  },\n  EPSG_4663: {\n    towgs84: '-210.502,-66.902,-48.476,2.094,-15.067,-5.817,0.485'\n  },\n  EPSG_4664: {\n    towgs84: '-211.939,137.626,58.3,-0.089,0.251,0.079,0.384'\n  },\n  EPSG_4665: {\n    towgs84: '-105.854,165.589,-38.312,-0.003,-0.026,0.024,-0.048'\n  },\n  EPSG_4666: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  EPSG_4756: {\n    towgs84: '-192.873,-39.382,-111.202,-0.00205,-0.0005,0.00335,0.0188'\n  },\n  EPSG_4723: {\n    towgs84: '-179.483,-69.379,-27.584,-7.862,8.163,6.042,-13.925'\n  },\n  EPSG_4726: {\n    towgs84: '8.853,-52.644,180.304,-0.393,-2.323,2.96,-24.081'\n  },\n  EPSG_4267: {\n    towgs84: '-8.0,160.0,176.0'\n  },\n  EPSG_5365: {\n    towgs84: '-0.16959,0.35312,0.51846,0.03385,-0.16325,0.03446,0.03693'\n  },\n  EPSG_4218: {\n    towgs84: '304.5,306.5,-318.1'\n  },\n  EPSG_4242: {\n    towgs84: '-33.722,153.789,94.959,-8.581,-4.478,4.54,8.95'\n  },\n  EPSG_4216: {\n    towgs84: '-292.295,248.758,429.447,4.9971,2.99,6.6906,1.0289'\n  },\n  ESRI_104105: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  ESRI_104129: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4673: {\n    towgs84: '174.05,-25.49,112.57'\n  },\n  EPSG_4202: {\n    towgs84: '-124,-60,154'\n  },\n  EPSG_4203: {\n    towgs84: '-117.763,-51.51,139.061,0.292,0.443,0.277,-0.191'\n  },\n  EPSG_3819: {\n    towgs84: '595.48,121.69,515.35,4.115,-2.9383,0.853,-3.408'\n  },\n  EPSG_8694: {\n    towgs84: '-93.799,-132.737,-219.073,-1.844,0.648,-6.37,-0.169'\n  },\n  EPSG_4145: {\n    towgs84: '275.57,676.78,229.6'\n  },\n  EPSG_4283: {\n    towgs84: '61.55,-10.87,-40.19,39.4924,32.7221,32.8979,-9.994'\n  },\n  EPSG_4317: {\n    towgs84: '2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266'\n  },\n  EPSG_4272: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993'\n  },\n  EPSG_4248: {\n    towgs84: '-307.7,265.3,-363.5'\n  },\n  EPSG_5561: {\n    towgs84: '24,-121,-76'\n  },\n  EPSG_5233: {\n    towgs84: '-0.293,766.95,87.713,0.195704,1.695068,3.473016,-0.039338'\n  },\n  ESRI_104130: {\n    towgs84: '-86,-98,-119'\n  },\n  ESRI_104102: {\n    towgs84: '682,-203,480'\n  },\n  ESRI_37207: {\n    towgs84: '7,-10,-26'\n  },\n  EPSG_4675: {\n    towgs84: '59.935,118.4,-10.871'\n  },\n  ESRI_104109: {\n    towgs84: '-89.121,-348.182,260.871'\n  },\n  ESRI_104112: {\n    towgs84: '-185.583,-230.096,281.361'\n  },\n  ESRI_104113: {\n    towgs84: '25.1,-275.6,222.6'\n  },\n  IGNF_WGS72G: {\n    towgs84: '0,12,6'\n  },\n  IGNF_NTFG: {\n    towgs84: '-168,-60,320'\n  },\n  IGNF_EFATE57G: {\n    towgs84: '-127,-769,472'\n  },\n  IGNF_PGP50G: {\n    towgs84: '324.8,153.6,172.1'\n  },\n  IGNF_REUN47G: {\n    towgs84: '94,-948,-1262'\n  },\n  IGNF_CSG67G: {\n    towgs84: '-186,230,110'\n  },\n  IGNF_GUAD48G: {\n    towgs84: '-467,-16,-300'\n  },\n  IGNF_TAHI51G: {\n    towgs84: '162,117,154'\n  },\n  IGNF_TAHAAG: {\n    towgs84: '65,342,77'\n  },\n  IGNF_NUKU72G: {\n    towgs84: '84,274,65'\n  },\n  IGNF_PETRELS72G: {\n    towgs84: '365,194,166'\n  },\n  IGNF_WALL78G: {\n    towgs84: '253,-133,-127'\n  },\n  IGNF_MAYO50G: {\n    towgs84: '-382,-59,-262'\n  },\n  IGNF_TANNAG: {\n    towgs84: '-139,-967,436'\n  },\n  IGNF_IGN72G: {\n    towgs84: '-13,-348,292'\n  },\n  IGNF_ATIGG: {\n    towgs84: '1118,23,66'\n  },\n  IGNF_FANGA84G: {\n    towgs84: '150.57,158.33,118.32'\n  },\n  IGNF_RUSAT84G: {\n    towgs84: '202.13,174.6,-15.74'\n  },\n  IGNF_KAUE70G: {\n    towgs84: '126.74,300.1,-75.49'\n  },\n  IGNF_MOP90G: {\n    towgs84: '-10.8,-1.8,12.77'\n  },\n  IGNF_MHPF67G: {\n    towgs84: '338.08,212.58,-296.17'\n  },\n  IGNF_TAHI79G: {\n    towgs84: '160.61,116.05,153.69'\n  },\n  IGNF_ANAA92G: {\n    towgs84: '1.5,3.84,4.81'\n  },\n  IGNF_MARQUI72G: {\n    towgs84: '330.91,-13.92,58.56'\n  },\n  IGNF_APAT86G: {\n    towgs84: '143.6,197.82,74.05'\n  },\n  IGNF_TUBU69G: {\n    towgs84: '237.17,171.61,-77.84'\n  },\n  IGNF_STPM50G: {\n    towgs84: '11.363,424.148,373.13'\n  },\n  EPSG_4150: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4754: {\n    towgs84: '-208.4058,-109.8777,-2.5764'\n  },\n  ESRI_104101: {\n    towgs84: '374,150,588'\n  },\n  EPSG_4693: {\n    towgs84: '0,-0.15,0.68'\n  },\n  EPSG_6207: {\n    towgs84: '293.17,726.18,245.36'\n  },\n  EPSG_4153: {\n    towgs84: '-133.63,-157.5,-158.62'\n  },\n  EPSG_4132: {\n    towgs84: '-241.54,-163.64,396.06'\n  },\n  EPSG_4221: {\n    towgs84: '-154.5,150.7,100.4'\n  },\n  EPSG_4266: {\n    towgs84: '-80.7,-132.5,41.1'\n  },\n  EPSG_4193: {\n    towgs84: '-70.9,-151.8,-41.4'\n  },\n  EPSG_5340: {\n    towgs84: '-0.41,0.46,-0.35'\n  },\n  EPSG_4246: {\n    towgs84: '-294.7,-200.1,525.5'\n  },\n  EPSG_4318: {\n    towgs84: '-3.2,-5.7,2.8'\n  },\n  EPSG_4121: {\n    towgs84: '-199.87,74.79,246.62'\n  },\n  EPSG_4223: {\n    towgs84: '-260.1,5.5,432.2'\n  },\n  EPSG_4158: {\n    towgs84: '-0.465,372.095,171.736'\n  },\n  EPSG_4285: {\n    towgs84: '-128.16,-282.42,21.93'\n  },\n  EPSG_4613: {\n    towgs84: '-404.78,685.68,45.47'\n  },\n  EPSG_4607: {\n    towgs84: '195.671,332.517,274.607'\n  },\n  EPSG_4475: {\n    towgs84: '-381.788,-57.501,-256.673'\n  },\n  EPSG_4208: {\n    towgs84: '-157.84,308.54,-146.6'\n  },\n  EPSG_4743: {\n    towgs84: '70.995,-335.916,262.898'\n  },\n  EPSG_4710: {\n    towgs84: '-323.65,551.39,-491.22'\n  },\n  EPSG_7881: {\n    towgs84: '-0.077,0.079,0.086'\n  },\n  EPSG_4682: {\n    towgs84: '283.729,735.942,261.143'\n  },\n  EPSG_4739: {\n    towgs84: '-156,-271,-189'\n  },\n  EPSG_4679: {\n    towgs84: '-80.01,253.26,291.19'\n  },\n  EPSG_4750: {\n    towgs84: '-56.263,16.136,-22.856'\n  },\n  EPSG_4644: {\n    towgs84: '-10.18,-350.43,291.37'\n  },\n  EPSG_4695: {\n    towgs84: '-103.746,-9.614,-255.95'\n  },\n  EPSG_4292: {\n    towgs84: '-355,21,72'\n  },\n  EPSG_4302: {\n    towgs84: '-61.702,284.488,472.052'\n  },\n  EPSG_4143: {\n    towgs84: '-124.76,53,466.79'\n  },\n  EPSG_4606: {\n    towgs84: '-153,153,307'\n  },\n  EPSG_4699: {\n    towgs84: '-770.1,158.4,-498.2'\n  },\n  EPSG_4247: {\n    towgs84: '-273.5,110.6,-357.9'\n  },\n  EPSG_4160: {\n    towgs84: '8.88,184.86,106.69'\n  },\n  EPSG_4161: {\n    towgs84: '-233.43,6.65,173.64'\n  },\n  EPSG_9251: {\n    towgs84: '-9.5,122.9,138.2'\n  },\n  EPSG_9253: {\n    towgs84: '-78.1,101.6,133.3'\n  },\n  EPSG_4297: {\n    towgs84: '-198.383,-240.517,-107.909'\n  },\n  EPSG_4269: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4301: {\n    towgs84: '-147,506,687'\n  },\n  EPSG_4618: {\n    towgs84: '-59,-11,-52'\n  },\n  EPSG_4612: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4678: {\n    towgs84: '44.585,-131.212,-39.544'\n  },\n  EPSG_4250: {\n    towgs84: '-130,29,364'\n  },\n  EPSG_4144: {\n    towgs84: '214,804,268'\n  },\n  EPSG_4147: {\n    towgs84: '-17.51,-108.32,-62.39'\n  },\n  EPSG_4259: {\n    towgs84: '-254.1,-5.36,-100.29'\n  },\n  EPSG_4164: {\n    towgs84: '-76,-138,67'\n  },\n  EPSG_4211: {\n    towgs84: '-378.873,676.002,-46.255'\n  },\n  EPSG_4182: {\n    towgs84: '-422.651,-172.995,84.02'\n  },\n  EPSG_4224: {\n    towgs84: '-143.87,243.37,-33.52'\n  },\n  EPSG_4225: {\n    towgs84: '-205.57,168.77,-4.12'\n  },\n  EPSG_5527: {\n    towgs84: '-67.35,3.88,-38.22'\n  },\n  EPSG_4752: {\n    towgs84: '98,390,-22'\n  },\n  EPSG_4310: {\n    towgs84: '-30,190,89'\n  },\n  EPSG_9248: {\n    towgs84: '-192.26,65.72,132.08'\n  },\n  EPSG_4680: {\n    towgs84: '124.5,-63.5,-281'\n  },\n  EPSG_4701: {\n    towgs84: '-79.9,-158,-168.9'\n  },\n  EPSG_4706: {\n    towgs84: '-146.21,112.63,4.05'\n  },\n  EPSG_4805: {\n    towgs84: '682,-203,480'\n  },\n  EPSG_4201: {\n    towgs84: '-165,-11,206'\n  },\n  EPSG_4210: {\n    towgs84: '-157,-2,-299'\n  },\n  EPSG_4183: {\n    towgs84: '-104,167,-38'\n  },\n  EPSG_4139: {\n    towgs84: '11,72,-101'\n  },\n  EPSG_4668: {\n    towgs84: '-86,-98,-119'\n  },\n  EPSG_4717: {\n    towgs84: '-2,151,181'\n  },\n  EPSG_4732: {\n    towgs84: '102,52,-38'\n  },\n  EPSG_4280: {\n    towgs84: '-377,681,-50'\n  },\n  EPSG_4209: {\n    towgs84: '-138,-105,-289'\n  },\n  EPSG_4261: {\n    towgs84: '31,146,47'\n  },\n  EPSG_4658: {\n    towgs84: '-73,46,-86'\n  },\n  EPSG_4721: {\n    towgs84: '265.025,384.929,-194.046'\n  },\n  EPSG_4222: {\n    towgs84: '-136,-108,-292'\n  },\n  EPSG_4601: {\n    towgs84: '-255,-15,71'\n  },\n  EPSG_4602: {\n    towgs84: '725,685,536'\n  },\n  EPSG_4603: {\n    towgs84: '72,213.7,93'\n  },\n  EPSG_4605: {\n    towgs84: '9,183,236'\n  },\n  EPSG_4621: {\n    towgs84: '137,248,-430'\n  },\n  EPSG_4657: {\n    towgs84: '-28,199,5'\n  },\n  EPSG_4316: {\n    towgs84: '103.25,-100.4,-307.19'\n  },\n  EPSG_4642: {\n    towgs84: '-13,-348,292'\n  },\n  EPSG_4698: {\n    towgs84: '145,-187,103'\n  },\n  EPSG_4192: {\n    towgs84: '-206.1,-174.7,-87.7'\n  },\n  EPSG_4311: {\n    towgs84: '-265,120,-358'\n  },\n  EPSG_4135: {\n    towgs84: '58,-283,-182'\n  },\n  ESRI_104138: {\n    towgs84: '198,-226,-347'\n  },\n  EPSG_4245: {\n    towgs84: '-11,851,5'\n  },\n  EPSG_4142: {\n    towgs84: '-125,53,467'\n  },\n  EPSG_4213: {\n    towgs84: '-106,-87,188'\n  },\n  EPSG_4253: {\n    towgs84: '-133,-77,-51'\n  },\n  EPSG_4129: {\n    towgs84: '-132,-110,-335'\n  },\n  EPSG_4713: {\n    towgs84: '-77,-128,142'\n  },\n  EPSG_4239: {\n    towgs84: '217,823,299'\n  },\n  EPSG_4146: {\n    towgs84: '295,736,257'\n  },\n  EPSG_4155: {\n    towgs84: '-83,37,124'\n  },\n  EPSG_4165: {\n    towgs84: '-173,253,27'\n  },\n  EPSG_4672: {\n    towgs84: '175,-38,113'\n  },\n  EPSG_4236: {\n    towgs84: '-637,-549,-203'\n  },\n  EPSG_4251: {\n    towgs84: '-90,40,88'\n  },\n  EPSG_4271: {\n    towgs84: '-2,374,172'\n  },\n  EPSG_4175: {\n    towgs84: '-88,4,101'\n  },\n  EPSG_4716: {\n    towgs84: '298,-304,-375'\n  },\n  EPSG_4315: {\n    towgs84: '-23,259,-9'\n  },\n  EPSG_4744: {\n    towgs84: '-242.2,-144.9,370.3'\n  },\n  EPSG_4244: {\n    towgs84: '-97,787,86'\n  },\n  EPSG_4293: {\n    towgs84: '616,97,-251'\n  },\n  EPSG_4714: {\n    towgs84: '-127,-769,472'\n  },\n  EPSG_4736: {\n    towgs84: '260,12,-147'\n  },\n  EPSG_6883: {\n    towgs84: '-235,-110,393'\n  },\n  EPSG_6894: {\n    towgs84: '-63,176,185'\n  },\n  EPSG_4205: {\n    towgs84: '-43,-163,45'\n  },\n  EPSG_4256: {\n    towgs84: '41,-220,-134'\n  },\n  EPSG_4262: {\n    towgs84: '639,405,60'\n  },\n  EPSG_4604: {\n    towgs84: '174,359,365'\n  },\n  EPSG_4169: {\n    towgs84: '-115,118,426'\n  },\n  EPSG_4620: {\n    towgs84: '-106,-129,165'\n  },\n  EPSG_4184: {\n    towgs84: '-203,141,53'\n  },\n  EPSG_4616: {\n    towgs84: '-289,-124,60'\n  },\n  EPSG_9403: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4684: {\n    towgs84: '-133,-321,50'\n  },\n  EPSG_4708: {\n    towgs84: '-491,-22,435'\n  },\n  EPSG_4707: {\n    towgs84: '114,-116,-333'\n  },\n  EPSG_4709: {\n    towgs84: '145,75,-272'\n  },\n  EPSG_4712: {\n    towgs84: '-205,107,53'\n  },\n  EPSG_4711: {\n    towgs84: '124,-234,-25'\n  },\n  EPSG_4718: {\n    towgs84: '230,-199,-752'\n  },\n  EPSG_4719: {\n    towgs84: '211,147,111'\n  },\n  EPSG_4724: {\n    towgs84: '208,-435,-229'\n  },\n  EPSG_4725: {\n    towgs84: '189,-79,-202'\n  },\n  EPSG_4735: {\n    towgs84: '647,1777,-1124'\n  },\n  EPSG_4722: {\n    towgs84: '-794,119,-298'\n  },\n  EPSG_4728: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4734: {\n    towgs84: '-632,438,-609'\n  },\n  EPSG_4727: {\n    towgs84: '912,-58,1227'\n  },\n  EPSG_4729: {\n    towgs84: '185,165,42'\n  },\n  EPSG_4730: {\n    towgs84: '170,42,84'\n  },\n  EPSG_4733: {\n    towgs84: '276,-57,149'\n  },\n  ESRI_37218: {\n    towgs84: '230,-199,-752'\n  },\n  ESRI_37240: {\n    towgs84: '-7,215,225'\n  },\n  ESRI_37221: {\n    towgs84: '252,-209,-751'\n  },\n  ESRI_4305: {\n    towgs84: '-123,-206,219'\n  },\n  ESRI_104139: {\n    towgs84: '-73,-247,227'\n  },\n  EPSG_4748: {\n    towgs84: '51,391,-36'\n  },\n  EPSG_4219: {\n    towgs84: '-384,664,-48'\n  },\n  EPSG_4255: {\n    towgs84: '-333,-222,114'\n  },\n  EPSG_4257: {\n    towgs84: '-587.8,519.75,145.76'\n  },\n  EPSG_4646: {\n    towgs84: '-963,510,-359'\n  },\n  EPSG_6881: {\n    towgs84: '-24,-203,268'\n  },\n  EPSG_6882: {\n    towgs84: '-183,-15,273'\n  },\n  EPSG_4715: {\n    towgs84: '-104,-129,239'\n  },\n  IGNF_RGF93GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGM04GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGSPM06GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGTAAF07GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGFG95GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGNCG: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGPFGDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_ETRS89G: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGR92GDD: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4173: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4180: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4619: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4667: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4075: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6706: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7798: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4661: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4669: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8685: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4151: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4758: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4761: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4765: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8997: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4023: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4670: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4694: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4148: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4163: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4167: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4189: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4190: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4176: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4659: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3824: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3889: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4046: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4081: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4558: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4483: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5013: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5264: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5324: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5354: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5371: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5373: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5381: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5393: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5489: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5593: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6135: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6365: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5246: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7886: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8431: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8427: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8699: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8818: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4757: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9140: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8086: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4686: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4737: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4747: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4749: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4674: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4755: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4759: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4762: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4763: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4764: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4166: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4170: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5546: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7844: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4818: {\n    towgs84: '589,76,480'\n  }\n};\n\nfor (var key in datums) {\n  var datum = datums[key];\n  if (!datum.datumName) {\n    continue;\n  }\n  datums[datum.datumName] = datum;\n}\n\nexport default datums;\n","import { PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD } from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; // datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\n/**\n * @typedef {Object} NadgridInfo\n * @property {string} name The name of the NAD grid or 'null' if not specified.\n * @property {boolean} mandatory Indicates if the grid is mandatory (true) or optional (false).\n * @property {*} grid The loaded NAD grid object, or null if not loaded or not applicable.\n * @property {boolean} isNull True if the grid is explicitly 'null', otherwise false.\n */\n\n/**\n * @typedef {Object} NTV2GridOptions\n * @property {boolean} [includeErrorFields=true] Whether to include error fields in the subgrids.\n */\n\n/**\n * @typedef {Object} NadgridHeader\n * @property {number} [nFields] Number of fields in the header.\n * @property {number} [nSubgridFields] Number of fields in each subgrid header.\n * @property {number} nSubgrids Number of subgrids in the file.\n * @property {string} [shiftType] Type of shift (e.g., \"SECONDS\").\n * @property {number} [fromSemiMajorAxis] Source ellipsoid semi-major axis.\n * @property {number} [fromSemiMinorAxis] Source ellipsoid semi-minor axis.\n * @property {number} [toSemiMajorAxis] Target ellipsoid semi-major axis.\n * @property {number} [toSemiMinorAxis] Target ellipsoid semi-minor axis.\n */\n\n/**\n * @typedef {Object} Subgrid\n * @property {Array<number>} ll Lower left corner of the grid in radians [longitude, latitude].\n * @property {Array<number>} del Grid spacing in radians [longitude interval, latitude interval].\n * @property {Array<number>} lim Number of columns in the grid [longitude columns, latitude columns].\n * @property {number} [count] Total number of grid nodes.\n * @property {Array} cvs Mapped node values for the grid.\n */\n\n/** @typedef {{header: NadgridHeader, subgrids: Array<Subgrid>}} NADGrid */\n\n/**\n * @typedef {Object} GeoTIFF\n * @property {() => Promise<number>} getImageCount - Returns the number of images in the GeoTIFF.\n * @property {(index: number) => Promise<GeoTIFFImage>} getImage - Returns a GeoTIFFImage for the given index.\n */\n\n/**\n * @typedef {Object} GeoTIFFImage\n * @property {() => number} getWidth - Returns the width of the image.\n * @property {() => number} getHeight - Returns the height of the image.\n * @property {() => number[]} getBoundingBox - Returns the bounding box as [minX, minY, maxX, maxY] in degrees.\n * @property {() => Promise<ArrayLike<ArrayLike<number>>>} readRasters - Returns the raster data as an array of bands.\n * @property {Object} fileDirectory - The file directory object containing metadata.\n * @property {Object} fileDirectory.ModelPixelScale - The pixel scale array [scaleX, scaleY, scaleZ] in degrees.\n */\n\nvar loadedNadgrids = {};\n\n/**\n * @overload\n * @param {string} key - The key to associate with the loaded grid.\n * @param {ArrayBuffer} data - The NTv2 grid data as an ArrayBuffer.\n * @param {NTV2GridOptions} [options] - Optional parameters for loading the grid.\n * @returns {NADGrid} - The loaded NAD grid information.\n */\n/**\n * @overload\n * @param {string} key - The key to associate with the loaded grid.\n * @param {GeoTIFF} data - The GeoTIFF instance to read the grid from.\n * @returns {{ready: Promise<NADGrid>}} - A promise that resolves to the loaded grid information.\n */\n/**\n * Load either a NTv2 file (.gsb) or a Geotiff (.tif) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer. Pass Geotiff as a GeoTIFF instance from the geotiff.js library.\n * @param {string} key - The key to associate with the loaded grid.\n * @param {ArrayBuffer|GeoTIFF} data The data to load, either an ArrayBuffer for NTv2 or a GeoTIFF instance.\n * @param {NTV2GridOptions} [options] Optional parameters.\n * @returns {{ready: Promise<NADGrid>}|NADGrid} - A promise that resolves to the loaded grid information.\n */\nexport default function nadgrid(key, data, options) {\n  if (data instanceof ArrayBuffer) {\n    return readNTV2Grid(key, data, options);\n  }\n  return { ready: readGeotiffGrid(key, data) };\n}\n\n/**\n * @param {string} key The key to associate with the loaded grid.\n * @param {ArrayBuffer} data The NTv2 grid data as an ArrayBuffer.\n * @param {NTV2GridOptions} [options] Optional parameters for loading the grid.\n * @returns {NADGrid} The loaded NAD grid information.\n */\nfunction readNTV2Grid(key, data, options) {\n  var includeErrorFields = true;\n  if (options !== undefined && options.includeErrorFields === false) {\n    includeErrorFields = false;\n  }\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian, includeErrorFields);\n  var nadgrid = { header: header, subgrids: subgrids };\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * @param {string} key The key to associate with the loaded grid.\n * @param {GeoTIFF} tiff The GeoTIFF instance to read the grid from.\n * @returns {Promise<NADGrid>} A promise that resolves to the loaded NAD grid information.\n */\nasync function readGeotiffGrid(key, tiff) {\n  var subgrids = [];\n  var subGridCount = await tiff.getImageCount();\n  // proj produced tiff grid shift files appear to organize lower res subgrids first, higher res/ child subgrids last.\n  for (var subgridIndex = subGridCount - 1; subgridIndex >= 0; subgridIndex--) {\n    var image = await tiff.getImage(subgridIndex);\n\n    var rasters = await image.readRasters();\n    var data = rasters;\n    var lim = [image.getWidth(), image.getHeight()];\n    var imageBBoxRadians = image.getBoundingBox().map(degreesToRadians);\n    var del = [image.fileDirectory.ModelPixelScale[0], image.fileDirectory.ModelPixelScale[1]].map(degreesToRadians);\n\n    var maxX = imageBBoxRadians[0] + (lim[0] - 1) * del[0];\n    var minY = imageBBoxRadians[3] - (lim[1] - 1) * del[1];\n\n    var latitudeOffsetBand = data[0];\n    var longitudeOffsetBand = data[1];\n    var nodes = [];\n\n    for (let i = lim[1] - 1; i >= 0; i--) {\n      for (let j = lim[0] - 1; j >= 0; j--) {\n        var index = i * lim[0] + j;\n        nodes.push([-secondsToRadians(longitudeOffsetBand[index]), secondsToRadians(latitudeOffsetBand[index])]);\n      }\n    }\n\n    subgrids.push({\n      del: del,\n      lim: lim,\n      ll: [-maxX, minY],\n      cvs: nodes\n    });\n  }\n\n  var tifGrid = {\n    header: {\n      nSubgrids: subGridCount\n    },\n    subgrids: subgrids\n  };\n  loadedNadgrids[key] = tifGrid;\n  return tifGrid;\n};\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n * @param {string} nadgrids A comma-separated list of grid names, optionally prefixed with '@' to indicate optional grids.\n * @returns\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) {\n    return null;\n  }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\n/**\n * @param {string} value The nadgrid string to get information for.\n * @returns {NadgridInfo|null} An object with grid information, or null if the input is empty.\n */\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return { name: 'null', mandatory: !optional, grid: null, isNull: true };\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction degreesToRadians(degrees) {\n  return (degrees) * Math.PI / 180;\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian)\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian, includeErrorFields) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian, includeErrorFields);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    var rowSize = 16;\n    if (includeErrorFields === false) {\n      rowSize = 8;\n    }\n    gridOffset += 176 + subHeader.gridNodeCount * rowSize;\n  }\n  return grids;\n}\n\n/**\n * @param {*} nodes\n * @returns Array<Array<number>>\n */\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {\n    return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];\n  });\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian, includeErrorFields) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n\n  if (includeErrorFields === false) {\n    gridRecordLength = 8;\n  }\n\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian)\n\n    };\n\n    if (includeErrorFields !== false) {\n      record.latitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian);\n      record.longitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian);\n    }\n\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport { sphere as dc_sphere, eccentricity as dc_eccentricity } from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport { getNadgrids } from './nadgrid';\n\n/**\n * @typedef {Object} DatumDefinition\n * @property {number} datum_type - The type of datum.\n * @property {number} a - Semi-major axis of the ellipsoid.\n * @property {number} b - Semi-minor axis of the ellipsoid.\n * @property {number} es - Eccentricity squared of the ellipsoid.\n * @property {number} ep2 - Second eccentricity squared of the ellipsoid.\n */\n\n/**\n * @param {string | import('./core').PROJJSONDefinition | import('./defs').ProjectionDefinition} srsCode\n * @param {(errorMessage?: string, instance?: Projection) => void} [callback]\n */\nfunction Projection(srsCode, callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  /** @type {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} */\n  this.forward = null;\n  /** @type {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} */\n  this.inverse = null;\n  /** @type {function(): void} */\n  this.init = null;\n  /** @type {string} */\n  this.name;\n  /** @type {Array<string>} */\n  this.names = null;\n  /** @type {string} */\n  this.title;\n  callback = callback || function (error) {\n    if (error) {\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if (typeof json !== 'object') {\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if (!ourProj) {\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  /** @type {DatumDefinition} */\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  if ('init' in this && typeof this.init === 'function') {\n    this.init();\n  }\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport { PJD_3PARAM, PJD_7PARAM, HALF_PI } from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; // Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    // ..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; // Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } // cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport { geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums } from './datumUtils';\nimport adjust_lon from './common/adjust_lon';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function (source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) && !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = { x: -point.x, y: point.y };\n  var output = { x: Number.NaN, y: Number.NaN };\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log('Unable to find mandatory grid \\'' + grid.name + '\\'');\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log('Failed to find a grid shift table for location \\''\n      + -input.x * R2D + ' ' + input.y * R2D + ' tried: \\'' + attemptedGrids + '\\'');\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = { x: Number.NaN, y: Number.NaN };\n  if (isNaN(pin.x)) {\n    return val;\n  }\n  var tb = { x: pin.x, y: pin.y };\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log('Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.');\n        break;\n      }\n      dif = { x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y) };\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log('Inverse grid shift iterator failed to converge.');\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = { x: pin.x / ct.del[0], y: pin.y / ct.del[1] };\n  var indx = { x: Math.floor(t.x), y: Math.floor(t.y) };\n  var frct = { x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y };\n  var val = { x: Number.NaN, y: Number.NaN };\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx++;\n  var f10 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx += ct.lim[0];\n  var f11 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx--;\n  var f01 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function (crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  /** @type {import(\"./core\").InterfaceCoordinates} */\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if ('ew'.indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n    } else if (i === 1) {\n      v = yin;\n      if ('ns'.indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    } else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n      case 'e':\n        out[t] = v;\n        break;\n      case 'w':\n        out[t] = -v;\n        break;\n      case 'n':\n        out[t] = v;\n        break;\n      case 's':\n        out[t] = -v;\n        break;\n      case 'u':\n        if (point[t] !== undefined) {\n          out.z = v;\n        }\n        break;\n      case 'd':\n        if (point[t] !== undefined) {\n          out.z = -v;\n        }\n        break;\n      default:\n      // console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n        return null;\n    }\n  }\n  return out;\n}\n","/**\n * @param {Array<number>} array\n * @returns {import(\"../core\").InterfaceCoordinates}\n */\nexport default function (array) {\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length > 2) {\n    out.z = array[2];\n  }\n  if (array.length > 3) {\n    out.m = array[3];\n  }\n  return out;\n}\n","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import { D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT } from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84')\n  || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\n/**\n * @param {import('./defs').ProjectionDefinition} source\n * @param {import('./defs').ProjectionDefinition} dest\n * @param {import('./core').TemplateCoordinates} point\n * @param {boolean} enforceAxis\n * @returns {import('./core').InterfaceCoordinates | undefined}\n */\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  point = /** @type {import('./core').InterfaceCoordinates} */ (point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\n/**\n * @typedef {{x: number, y: number, z?: number, m?: number}} InterfaceCoordinates\n */\n\n/**\n * @typedef {Array<number> | InterfaceCoordinates} TemplateCoordinates\n */\n\n/**\n * @typedef {Object} Converter\n * @property {<T extends TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} forward\n * @property {<T extends TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} inverse\n * @property {proj} [oProj]\n */\n\n/**\n * @typedef {Object} PROJJSONDefinition\n * @property {string} [$schema]\n * @property {string} type\n * @property {string} [name]\n * @property {{authority: string, code: number}} [id]\n * @property {string} [scope]\n * @property {string} [area]\n * @property {{south_latitude: number, west_longitude: number, north_latitude: number, east_longitude: number}} [bbox]\n * @property {PROJJSONDefinition[]} [components]\n * @property {{type: string, name: string}} [datum]\n * @property {{\n *   name: string,\n *   members: Array<{\n *     name: string,\n *     id?: {authority: string, code: number}\n *   }>,\n *   ellipsoid?: {\n *     name: string,\n *     semi_major_axis: number,\n *     inverse_flattening?: number\n *   },\n *   accuracy?: string,\n *   id?: {authority: string, code: number}\n * }} [datum_ensemble]\n * @property {{\n *   subtype: string,\n *   axis: Array<{\n *     name: string,\n *     abbreviation?: string,\n *     direction: string,\n *     unit: string\n *   }>\n * }} [coordinate_system]\n * @property {{\n *   name: string,\n *   method: {name: string},\n *   parameters: Array<{\n *     name: string,\n *     value: number,\n *     unit?: string\n *   }>\n * }} [conversion]\n * @property {{\n *   name: string,\n *   method: {name: string},\n *   parameters: Array<{\n *     name: string,\n *     value: number,\n *     unit?: string,\n *     type?: string,\n *     file_name?: string\n *   }>\n * }} [transformation]\n */\n\n/**\n * @template {TemplateCoordinates} T\n * @param {proj} from\n * @param {proj} to\n * @param {T} coords\n * @param {boolean} [enforceAxis]\n * @returns {T}\n */\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || { x: NaN, y: NaN };\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return /** @type {T} */ ([transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3)));\n        } else {\n          return /** @type {T} */ ([transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3)));\n        }\n      } else {\n        return /** @type {T} */ ([transformedArray.x, transformedArray.y].concat(coords.slice(2)));\n      }\n    } else {\n      return /** @type {T} */ ([transformedArray.x, transformedArray.y]);\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return /** @type {T} */ (out);\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return /** @type {T} */ (out);\n  }\n}\n\n/**\n * @param {proj | string | PROJJSONDefinition | Converter} item\n * @returns {import('./Proj').default}\n */\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (typeof item === 'object' && 'oProj' in item) {\n    return item.oProj;\n  }\n  return proj(/** @type {string | PROJJSONDefinition} */ (item));\n}\n\n/**\n * @overload\n * @param {string | PROJJSONDefinition | proj} toProj\n * @returns {Converter}\n */\n/**\n * @overload\n * @param {string | PROJJSONDefinition | proj} fromProj\n * @param {string | PROJJSONDefinition | proj} toProj\n * @returns {Converter}\n */\n/**\n * @template {TemplateCoordinates} T\n * @overload\n * @param {string | PROJJSONDefinition | proj} toProj\n * @param {T} coord\n * @returns {T}\n */\n/**\n * @template {TemplateCoordinates} T\n * @overload\n * @param {string | PROJJSONDefinition | proj} fromProj\n * @param {string | PROJJSONDefinition | proj} toProj\n * @param {T} coord\n * @returns {T}\n */\n/**\n * @template {TemplateCoordinates} T\n * @param {string | PROJJSONDefinition | proj} fromProjOrToProj\n * @param {string | PROJJSONDefinition | proj | TemplateCoordinates} [toProjOrCoord]\n * @param {T} [coord]\n * @returns {T|Converter}\n */\nfunction proj4(fromProjOrToProj, toProjOrCoord, coord) {\n  /** @type {proj} */\n  var fromProj;\n  /** @type {proj} */\n  var toProj;\n  var single = false;\n  /** @type {Converter} */\n  var obj;\n  if (typeof toProjOrCoord === 'undefined') {\n    toProj = checkProj(fromProjOrToProj);\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof /** @type {?} */ (toProjOrCoord).x !== 'undefined' || Array.isArray(toProjOrCoord)) {\n    coord = /** @type {T} */ (/** @type {?} */ (toProjOrCoord));\n    toProj = checkProj(fromProjOrToProj);\n    fromProj = wgs84;\n    single = true;\n  }\n  if (!fromProj) {\n    fromProj = checkProj(fromProjOrToProj);\n  }\n  if (!toProj) {\n    toProj = checkProj(/** @type {string | PROJJSONDefinition | proj } */ (toProjOrCoord));\n  }\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      /**\n       * @template {TemplateCoordinates} T\n       * @param {T} coords\n       * @param {boolean=} enforceAxis\n       * @returns {T}\n       */\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      /**\n       * @template {TemplateCoordinates} T\n       * @param {T} coords\n       * @param {boolean=} enforceAxis\n       * @returns {T}\n       */\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\n\nexport default proj4;\n","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import { toPoint, forward } from 'mgrs';\n\n/**\n * @deprecated v3.0.0 - use proj4.toPoint instead\n * @param {number | import('./core').TemplateCoordinates | string} x\n * @param {number} [y]\n * @param {number} [z]\n */\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0]);\n    this.y = parseFloat(coords[1]);\n    this.z = parseFloat(coords[2]) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function (mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function (accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function (es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n","export default function (phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n","import pj_mlfn from './pj_mlfn';\nimport { EPSLN } from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function (arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    // t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    // phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  // ..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport { EPSLN, HALF_PI } from '../constants/values';\nimport sign from '../common/sign';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {Array<number>} en\n * @property {number} ml0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    } else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        } else {\n          y = 0;\n        }\n      } else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  } else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1\n      + als / 6 * (1 - t + c\n        + als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c\n          + als / 42 * (61 + 179 * ts - ts * t - 479 * t)))))\n        + this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0\n      + sin_phi * delta_lon * al / 2 * (1\n        + als / 12 * (5 - t + 9 * c + 4 * cs\n          + als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c\n            + als / 56 * (1385 + 543 * ts - ts * t - 3111 * t))))))\n          + this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    } else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  } else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1\n        - ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs\n          - ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c\n            - ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1\n        - ds / 6 * (1 + 2 * t + c\n          - ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c\n            - ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    } else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Fast_Transverse_Mercator', 'Fast Transverse Mercator'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n","export default function (x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function (x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function (x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function (pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function (pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function (x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function (pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {Array<number>} cbg\n * @property {Array<number>} cgb\n * @property {Array<number>} utg\n * @property {Array<number>} gtu\n * @property {number} Qn\n * @property {number} Zb\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675))))));\n  this.cbg[0] = n * (-2 + n * (2 / 3 + n * (4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * (-13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * (-24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * (2 / 3 + n * (-37 / 96 + n * (1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  } else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  } else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Extended_Transverse_Mercator', 'Extended Transverse Mercator', 'etmerc', 'Transverse_Mercator', 'Transverse Mercator', 'Gauss Kruger', 'Gauss_Kruger', 'tmerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function (zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport { D2R } from '../constants/values';\n\n/** @this {import('../defs.js').ProjectionDefinition} */\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 = ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = ['Universal Transverse Mercator System', 'utm'];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function (esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport { HALF_PI, FORTPI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} rc\n * @property {number} C\n * @property {number} phic0\n * @property {number} ratexp\n * @property {number} K\n * @property {number} e\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), -0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gauss'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sinc0\n * @property {number} cosc0\n * @property {number} R2\n * @property {number} rc\n * @property {number} phic0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = 'Oblique Stereographic Alternative';\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['Stereographic_North_Pole', 'Oblique_Stereographic', 'sterea', 'Oblique Stereographic Alternative', 'Double_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { EPSLN, HALF_PI } from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} coslat0\n * @property {number} sinlat0\n * @property {number} ms1\n * @property {number} X0\n * @property {number} cosX0\n * @property {number} sinX0\n * @property {number} con\n * @property {number} cons\n * @property {number} e\n */\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        // North pole\n        // trace('stere:north pole');\n        this.con = 1;\n      } else {\n        // South pole\n        // trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    // case of the origine point\n    // trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    // trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  } else {\n    X = 2 * Math.atan(ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      // trace(p.toString());\n      return p;\n    } else if (Math.abs(this.sinlat0) < EPSLN) {\n      // Eq\n      // trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    } else {\n      // other case\n      // trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  // trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    } else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        // trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, -1 * p.y));\n    } else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      } else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  // trace(p.toString());\n  return p;\n}\n\nexport var names = ['stere', 'Stereographic_South_Pole', 'Polar_Stereographic_variant_A', 'Polar_Stereographic_variant_B', 'Polar_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} lambda0\n * @property {number} e\n * @property {number} R\n * @property {number} b0\n * @property {number} K\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      // ...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    // S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = ['somerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\nimport { getNormalizedProjName } from '../projections';\n\n/**\n * @typedef {Object} LocalThis\n * @property {boolean} no_off\n * @property {boolean} no_rot\n * @property {number} rectified_grid_angle\n * @property {number} es\n * @property {number} A\n * @property {number} B\n * @property {number} E\n * @property {number} e\n * @property {number} lam0\n * @property {number} singam\n * @property {number} cosgam\n * @property {number} sinrot\n * @property {number} cosrot\n * @property {number} rB\n * @property {number} ArB\n * @property {number} BrA\n * @property {number} u_0\n * @property {number} v_pole_n\n * @property {number} v_pole_s\n */\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.projName === 'object' ? Object.keys(P.projName)[0] : P.projName;\n\n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1 || typeAProjections.indexOf(getNormalizedProjName(projectionName)) !== -1;\n}\n\n/**\n * Initialize the Oblique Mercator  projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0;\n\n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n\n  var alp = false;\n  if ('alpha' in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if ('rectified_grid_angle' in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n\n  if (gam) {\n    gamma = this.rectified_grid_angle;\n  }\n\n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n\n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL\n      || Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL\n      || Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n\n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n\n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D - 1;\n\n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n\n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n\n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n\n    if (con < -Math.PI) {\n      lam2 -= TWO_PI;\n    } else if (con > Math.PI) {\n      lam2 += TWO_PI;\n    }\n\n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n\n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n\n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n\n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n\n    if (this.lat0 < 0) {\n      this.u_0 = -this.u_0;\n    }\n  }\n\n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ---------------------------------------------------------- */\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n\n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n\n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n\n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n\n    v = 0.5 * this.ArB * Math.log((1 - U) / (1 + U));\n    temp = Math.cos(this.B * p.x);\n\n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }\n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n\n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n\n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n\n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n\n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n\n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n\n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n\n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n\n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n\n  coords.x += this.lam0;\n\n  return coords;\n}\n\nexport var names = ['Hotine_Oblique_Mercator', 'Hotine Oblique Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Variant_B', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin', 'Hotine_Oblique_Mercator_Two_Point_Natural_Origin', 'Hotine_Oblique_Mercator_Azimuth_Center', 'Oblique_Mercator', 'omerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { HALF_PI, EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} e\n * @property {number} ns\n * @property {number} f0\n * @property {number} rh\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // double lat0;                    /* the reference latitude               */\n  // double long0;                   /* the reference longitude              */\n  // double lat1;                    /* first standard parallel              */\n  // double lat2;                    /* second standard parallel             */\n  // double r_maj;                   /* major axis                           */\n  // double r_min;                   /* minor axis                           */\n  // double false_east;              /* x offset in meters                   */\n  // double false_north;             /* y offset in meters                   */\n\n  // the above value can be set with proj4.defs\n  // example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } // if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = Math.abs(Math.abs(this.lat0) - HALF_PI) < EPSLN\n    ? 0 // Handle poles by setting ts0 to 0\n    : tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  } else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = 'Lambert Conformal Conic';\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  } else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  } else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  'Lambert Tangential Conformal Conic Projection',\n  'Lambert_Conformal_Conic',\n  'Lambert_Conformal_Conic_1SP',\n  'Lambert_Conformal_Conic_2SP',\n  'lcc',\n  'Lambert Conic Conformal (1SP)',\n  'Lambert Conic Conformal (2SP)'\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x */\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, -1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = ['Krovak', 'krovak'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n","export default function (x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n","export default function (x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n","export default function (x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n","export default function (x) {\n  return (x * x * x * (35 / 3072));\n}\n","export default function (a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n","import { HALF_PI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function (ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // ..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { HALF_PI, EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} ml0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  } else {\n    // ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  } else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['Cassini', 'Cassini_Soldner', 'cass'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  } else {\n    return (2 * sinphi);\n  }\n}\n","import { HALF_PI, EPSLN, FORTPI } from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} mode\n * @property {Array<number>} apa\n * @property {number} dd\n * @property {number} e\n * @property {number} es\n * @property {number} mmf\n * @property {number} rq\n * @property {number} qp\n * @property {number} sinb1\n * @property {number} cosb1\n * @property {number} ymf\n * @property {number} xmf\n * @property {number} sinph0\n * @property {number} cosph0\n */\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/**\n * Initialize the Lambert Azimuthal Equal Area projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? S_POLE : N_POLE;\n  } else if (Math.abs(t) < EPSLN) {\n    this.mode = EQUIT;\n  } else {\n    this.mode = OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n      case N_POLE:\n        this.dd = 1;\n        break;\n      case S_POLE:\n        this.dd = 1;\n        break;\n      case EQUIT:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        this.dd = 1 / this.rq;\n        this.xmf = 1;\n        this.ymf = 0.5 * this.qp;\n        break;\n      case OBLIQ:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        sinphi = Math.sin(this.lat0);\n        this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n        this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n        this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n        this.ymf = (this.xmf = this.rq) / this.dd;\n        this.xmf *= this.dd;\n        break;\n    }\n  } else {\n    if (this.mode === OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  } else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n        b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n        break;\n      case this.EQUIT:\n        b = 1 + cosb * coslam;\n        break;\n      case this.N_POLE:\n        b = HALF_PI + phi;\n        q = this.qp - q;\n        break;\n      case this.S_POLE:\n        b = phi - HALF_PI;\n        q = this.qp + q;\n        break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n      case this.EQUIT:\n        b = Math.sqrt(2 / b);\n        if (this.mode === this.OBLIQ) {\n          y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n        } else {\n          y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n        }\n        x = this.xmf * b * cosb * sinlam;\n        break;\n      case this.N_POLE:\n      case this.S_POLE:\n        if (q >= 0) {\n          x = (b = Math.sqrt(q)) * sinlam;\n          y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n        } else {\n          x = y = 0;\n        }\n        break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n      case this.EQUIT:\n        phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n        x *= sinz;\n        y = cosz * rh;\n        break;\n      case this.OBLIQ:\n        phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n        x *= sinz * this.cosph0;\n        y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n        break;\n      case this.N_POLE:\n        y = -y;\n        phi = HALF_PI - phi;\n        break;\n      case this.S_POLE:\n        phi -= HALF_PI;\n        break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  } else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      } else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = ['Lambert Azimuthal Equal Area', 'Lambert_Azimuthal_Equal_Area', 'laea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function (x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e3\n * @property {number} sin_po\n * @property {number} cos_po\n * @property {number} t1\n * @property {number} con\n * @property {number} ms1\n * @property {number} qs1\n * @property {number} t2\n * @property {number} ms2\n * @property {number} qs2\n * @property {number} t3\n * @property {number} qs0\n * @property {number} ns0\n * @property {number} c\n * @property {number} rh\n * @property {number} sin_phi\n * @property {number} cos_phi\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  } else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  ------------------------------------------------------------------- */\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  } else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n------------------------------------------- */\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = ['Albers_Conic_Equal_Area', 'Albers_Equal_Area', 'Albers', 'aea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sin_p14\n * @property {number} cos_p14\n * @property {number} infinity_dist\n * @property {number} rc\n */\n\n/**\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n   @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  } else {\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      ----------------- */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gnom'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    } else {\n      return HALF_PI;\n    }\n  }\n  // var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} e\n */\n\n/**\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n  @this {import('../defs.js').ProjectionDefinition & LocalThis}\n*/\nexport function init() {\n  // no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  } else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  } else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['cea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Equidistant Cylindrical (Plate Carre)';\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = ['Equirectangular', 'Equidistant_Cylindrical', 'Equidistant_Cylindrical_Spherical', 'eqc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport { EPSLN } from '../constants/values';\n\nimport gN from '../common/gN';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} ml0\n */\n\nvar MAX_ITER = 20;\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); // si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    } else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  } else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    } else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    } else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  } else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    } else {\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      // lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Polyconic', 'American_Polyconic', 'poly'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { SEC_TO_RAD } from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['New_Zealand_Map_Grid', 'nzmg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n/* Initialize the Miller Cylindrical projection\n  ------------------------------------------- */\nexport function init() {\n  // no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Miller_Cylindrical', 'mill'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {Array<number>} en\n * @property {number} n\n * @property {number} m\n * @property {number} C_y\n * @property {number} C_x\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n    ------------------------------------------------- */\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  } else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  ----------------------------------------------------- */\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    ----------------- */\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    } else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n  } else {\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    } else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  } else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      // temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    } else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Sinusoidal', 'sinu'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport { EPSLN } from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ---------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      ----------------------------------------------------- */\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       -------------------------------------------------------------------------- */\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       ------------------------------------------------------------------- */\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mollweide', 'moll'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} sin_phi\n * @property {number} cos_phi\n * @property {number} ms1\n * @property {number} ml1\n * @property {number} ms2\n * @property {number} ml2\n * @property {number} ns\n * @property {number} g\n * @property {number} ml0\n * @property {number} rh\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sin_phi = Math.sin(this.lat1);\n  this.cos_phi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sin_phi, this.cos_phi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sin_phi;\n  } else {\n    this.sin_phi = Math.sin(this.lat2);\n    this.cos_phi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sin_phi, this.cos_phi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      ----------------- */\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  } else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n}\n\nexport var names = ['Equidistant_Conic', 'eqdc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport { HALF_PI, EPSLN } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} R - Radius of the Earth\n */\n\n/**\n * Initialize the Van Der Grinten projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  // this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    } else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  // con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    // y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  } else {\n    // y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  --------------------------------------------------------- */\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    } else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  } else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  } else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Van_der_Grinten_I', 'VanDerGrinten', 'Van_der_Grinten', 'vandg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","/**\n * Calculates the inverse geodesic problem using Vincenty's formulae.\n * Computes the forward azimuth and ellipsoidal distance between two points\n * specified by latitude and longitude on the surface of an ellipsoid.\n *\n * @param {number} lat1 Latitude of the first point in radians.\n * @param {number} lon1 Longitude of the first point in radians.\n * @param {number} lat2 Latitude of the second point in radians.\n * @param {number} lon2 Longitude of the second point in radians.\n * @param {number} a Semi-major axis of the ellipsoid (meters).\n * @param {number} f Flattening of the ellipsoid.\n * @returns {{ azi1: number, s12: number }} An object containing:\n *   - azi1: Forward azimuth from the first point to the second point (radians).\n *   - s12: Ellipsoidal distance between the two points (meters).\n */\nexport function vincentyInverse(lat1, lon1, lat2, lon2, a, f) {\n  const L = lon2 - lon1;\n  const U1 = Math.atan((1 - f) * Math.tan(lat1));\n  const U2 = Math.atan((1 - f) * Math.tan(lat2));\n  const sinU1 = Math.sin(U1), cosU1 = Math.cos(U1);\n  const sinU2 = Math.sin(U2), cosU2 = Math.cos(U2);\n\n  let lambda = L, lambdaP, iterLimit = 100;\n  let sinLambda, cosLambda, sinSigma, cosSigma, sigma, sinAlpha, cos2Alpha, cos2SigmaM, C;\n  let uSq, A, B, deltaSigma, s;\n\n  do {\n    sinLambda = Math.sin(lambda);\n    cosLambda = Math.cos(lambda);\n    sinSigma = Math.sqrt(\n      (cosU2 * sinLambda) * (cosU2 * sinLambda)\n      + (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda)\n      * (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda)\n    );\n    if (sinSigma === 0) {\n      return { azi1: 0, s12: 0 }; // coincident points\n    }\n    cosSigma = sinU1 * sinU2 + cosU1 * cosU2 * cosLambda;\n    sigma = Math.atan2(sinSigma, cosSigma);\n    sinAlpha = cosU1 * cosU2 * sinLambda / sinSigma;\n    cos2Alpha = 1 - sinAlpha * sinAlpha;\n    cos2SigmaM = (cos2Alpha !== 0) ? (cosSigma - 2 * sinU1 * sinU2 / cos2Alpha) : 0;\n    C = f / 16 * cos2Alpha * (4 + f * (4 - 3 * cos2Alpha));\n    lambdaP = lambda;\n    lambda = L + (1 - C) * f * sinAlpha\n    * (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\n  } while (Math.abs(lambda - lambdaP) > 1e-12 && --iterLimit > 0);\n\n  if (iterLimit === 0) {\n    return { azi1: NaN, s12: NaN }; // formula failed to converge\n  }\n\n  uSq = cos2Alpha * (a * a - (a * (1 - f)) * (a * (1 - f))) / ((a * (1 - f)) * (a * (1 - f)));\n  A = 1 + uSq / 16384 * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq)));\n  B = uSq / 1024 * (256 + uSq * (-128 + uSq * (74 - 47 * uSq)));\n  deltaSigma = B * sinSigma * (cos2SigmaM + B / 4 * (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)\n    - B / 6 * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)));\n\n  s = (a * (1 - f)) * A * (sigma - deltaSigma);\n\n  // Forward azimuth\n  const azi1 = Math.atan2(cosU2 * sinLambda, cosU1 * sinU2 - sinU1 * cosU2 * cosLambda);\n\n  return { azi1, s12: s };\n}\n\n/**\n * Solves the direct geodetic problem using Vincenty's formulae.\n * Given a starting point, initial azimuth, and distance, computes the destination point on the ellipsoid.\n *\n * @param {number} lat1 Latitude of the starting point in radians.\n * @param {number} lon1 Longitude of the starting point in radians.\n * @param {number} azi1 Initial azimuth (forward azimuth) in radians.\n * @param {number} s12 Distance to travel from the starting point in meters.\n * @param {number} a Semi-major axis of the ellipsoid in meters.\n * @param {number} f Flattening of the ellipsoid.\n * @returns {{lat2: number, lon2: number}} The latitude and longitude (in radians) of the destination point.\n */\nexport function vincentyDirect(lat1, lon1, azi1, s12, a, f) {\n  const U1 = Math.atan((1 - f) * Math.tan(lat1));\n  const sinU1 = Math.sin(U1), cosU1 = Math.cos(U1);\n  const sinAlpha1 = Math.sin(azi1), cosAlpha1 = Math.cos(azi1);\n\n  const sigma1 = Math.atan2(sinU1, cosU1 * cosAlpha1);\n  const sinAlpha = cosU1 * sinAlpha1;\n  const cos2Alpha = 1 - sinAlpha * sinAlpha;\n  const uSq = cos2Alpha * (a * a - (a * (1 - f)) * (a * (1 - f))) / ((a * (1 - f)) * (a * (1 - f)));\n  const A = 1 + uSq / 16384 * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq)));\n  const B = uSq / 1024 * (256 + uSq * (-128 + uSq * (74 - 47 * uSq)));\n\n  let sigma = s12 / ((a * (1 - f)) * A), sigmaP, iterLimit = 100;\n  let cos2SigmaM, sinSigma, cosSigma, deltaSigma;\n\n  do {\n    cos2SigmaM = Math.cos(2 * sigma1 + sigma);\n    sinSigma = Math.sin(sigma);\n    cosSigma = Math.cos(sigma);\n    deltaSigma = B * sinSigma * (cos2SigmaM + B / 4 * (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)\n      - B / 6 * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)));\n    sigmaP = sigma;\n    sigma = s12 / ((a * (1 - f)) * A) + deltaSigma;\n  } while (Math.abs(sigma - sigmaP) > 1e-12 && --iterLimit > 0);\n\n  if (iterLimit === 0) {\n    return { lat2: NaN, lon2: NaN };\n  }\n\n  const tmp = sinU1 * sinSigma - cosU1 * cosSigma * cosAlpha1;\n  const lat2 = Math.atan2(\n    sinU1 * cosSigma + cosU1 * sinSigma * cosAlpha1,\n    (1 - f) * Math.sqrt(sinAlpha * sinAlpha + tmp * tmp)\n  );\n  const lambda = Math.atan2(\n    sinSigma * sinAlpha1,\n    cosU1 * cosSigma - sinU1 * sinSigma * cosAlpha1\n  );\n  const C = f / 16 * cos2Alpha * (4 + f * (4 - 3 * cos2Alpha));\n  const L = lambda - (1 - C) * f * sinAlpha\n    * (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\n  const lon2 = lon1 + L;\n\n  return { lat2, lon2 };\n}\n","import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN } from '../constants/values';\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\nimport { vincentyDirect, vincentyInverse } from '../common/vincenty';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} sin_p12\n * @property {number} cos_p12\n * @property {number} a\n * @property {number} f\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n  // flattening for ellipsoid\n  this.f = this.es / (1 + Math.sqrt(1 - this.es));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, c, kp, cos_c, vars, azi1;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    } else {\n      // default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    } else {\n      // Default case\n      if (Math.abs(lon) < EPSLN && Math.abs(lat - this.lat0) < EPSLN) {\n        p.x = p.y = 0;\n        return p;\n      }\n      vars = vincentyInverse(this.lat0, this.long0, lat, lon, this.a, this.f);\n      azi1 = vars.azi1;\n      p.x = vars.s12 * Math.sin(azi1);\n      p.y = vars.s12 * Math.cos(azi1);\n      return p;\n    }\n  }\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, azi1, s12, vars;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    } else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n        } else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else {\n      // default case\n      azi1 = Math.atan2(p.x, p.y);\n      s12 = Math.sqrt(p.x * p.x + p.y * p.y);\n      vars = vincentyDirect(this.lat0, this.long0, azi1, s12, this.a, this.f);\n\n      p.x = vars.lon2;\n      p.y = vars.lat2;\n      return p;\n    }\n  }\n}\n\nexport var names = ['Azimuthal_Equidistant', 'aeqd'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sin_p14\n * @property {number} cos_p14\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n    } else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['ortho'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport { EPSLN, TWO_PI, SPI, HALF_PI, FORTPI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} face\n * @property {number} x0\n * @property {number} y0\n * @property {number} es\n * @property {number} one_minus_f\n * @property {number} one_minus_f_squared\n */\n\n/* constants */\nvar FACE_ENUM = {\n  FRONT: 1,\n  RIGHT: 2,\n  BACK: 3,\n  LEFT: 4,\n  TOP: 5,\n  BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n  AREA_0: 1,\n  AREA_1: 2,\n  AREA_2: 3,\n  AREA_3: 4\n};\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Quadrilateralized Spherical Cube';\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = { x: 0, y: 0 };\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = { value: 0 };\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) { // if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; // lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = { lam: 0, phi: 0 };\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = { value: 0 };\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = ['Quadrilateralized Spherical Cube', 'Quadrilateralized_Spherical_Cube', 'qsc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport { HALF_PI, D2R, R2D, EPSLN } from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n  [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n  [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n  [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n  [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n  [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n  [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n  [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n  [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n  [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n  [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n  [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n  [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n  [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n  [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n  [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n  [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n  [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n  [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n  [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n  [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n  [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n  [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n  [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n  [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n  [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n  [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n  [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n  [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n  [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n  [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n  [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n  [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n  [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n  [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n  [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n  [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n  [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n  [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D / 5; // rad to 5-degree interval\nvar RC1 = 1 / C1;\nvar NODES = 18;\n\nvar poly3_val = function (coefs, x) {\n  return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function (coefs, x) {\n  return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n  var x = start;\n  for (; iters; --iters) {\n    var upd = f_df(x);\n    x -= upd;\n    if (Math.abs(upd) < max_err) {\n      break;\n    }\n  }\n  return x;\n}\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.long0 = this.long0 || 0;\n  this.es = 0;\n  this.title = this.title || 'Robinson';\n}\n\nexport function forward(ll) {\n  var lon = adjust_lon(ll.x - this.long0);\n\n  var dphi = Math.abs(ll.y);\n  var i = Math.floor(dphi * C1);\n  if (i < 0) {\n    i = 0;\n  } else if (i >= NODES) {\n    i = NODES - 1;\n  }\n  dphi = R2D * (dphi - RC1 * i);\n  var xy = {\n    x: poly3_val(COEFS_X[i], dphi) * lon,\n    y: poly3_val(COEFS_Y[i], dphi)\n  };\n  if (ll.y < 0) {\n    xy.y = -xy.y;\n  }\n\n  xy.x = xy.x * this.a * FXC + this.x0;\n  xy.y = xy.y * this.a * FYC + this.y0;\n  return xy;\n}\n\nexport function inverse(xy) {\n  var ll = {\n    x: (xy.x - this.x0) / (this.a * FXC),\n    y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n  };\n\n  if (ll.y >= 1) { // pathologic case\n    ll.x /= COEFS_X[NODES][0];\n    ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    // find table interval\n    var i = Math.floor(ll.y * NODES);\n    if (i < 0) {\n      i = 0;\n    } else if (i >= NODES) {\n      i = NODES - 1;\n    }\n    for (;;) {\n      if (COEFS_Y[i][0] > ll.y) {\n        --i;\n      } else if (COEFS_Y[i + 1][0] <= ll.y) {\n        ++i;\n      } else {\n        break;\n      }\n    }\n    // linear interpolation in 5 degree interval\n    var coefs = COEFS_Y[i];\n    var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i + 1][0] - coefs[0]);\n    // find t so that poly3_val(coefs, t) = ll.y\n    t = newton_rapshon(function (x) {\n      return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n    }, t, EPSLN, 100);\n\n    ll.x /= poly3_val(COEFS_X[i], t);\n    ll.y = (5 * i + t) * D2R;\n    if (xy.y < 0) {\n      ll.y = -ll.y;\n    }\n  }\n\n  ll.x = adjust_lon(ll.x + this.long0);\n  return ll;\n}\n\nexport var names = ['Robinson', 'robin'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n  geodeticToGeocentric,\n  geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n  this.name = 'geocent';\n}\n\nexport function forward(p) {\n  var point = geodeticToGeocentric(p, this.es, this.a);\n  return point;\n}\n\nexport function inverse(p) {\n  var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n  return point;\n}\n\nexport var names = ['Geocentric', 'geocentric', 'geocent', 'Geocent'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { D2R, HALF_PI, EPSLN } from '../constants/values';\nimport hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} mode\n * @property {number} sinph0\n * @property {number} cosph0\n * @property {number} pn1\n * @property {number} h\n * @property {number} rp\n * @property {number} p\n * @property {number} h1\n * @property {number} pfact\n * @property {number} es\n * @property {number} tilt\n * @property {number} azi\n * @property {number} cg\n * @property {number} sg\n * @property {number} cw\n * @property {number} sw\n */\n\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nvar params = {\n  h: { def: 100000, num: true }, // default is Karman line, no default in PROJ.7\n  azi: { def: 0, num: true, degrees: true }, // default is North\n  tilt: { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true }, // default is Greenwich, conversion to rad is automatic\n  lat0: { def: 0, num: true } // default is Equator, conversion to rad is automatic\n};\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === 'undefined') {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error('Invalid parameter value, must be numeric ' + p + ' = ' + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a; // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error('Invalid height');\n  }\n\n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt\n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = ['Tilted_Perspective', 'tpers'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {1 | 0} flip_axis\n * @property {number} h\n * @property {number} radius_g_1\n * @property {number} radius_g\n * @property {number} radius_p\n * @property {number} radius_p2\n * @property {number} radius_p_inv2\n * @property {'ellipse'|'sphere'} shape\n * @property {number} C\n * @property {string} sweep\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n  this.h = Number(this.h);\n  this.radius_g_1 = this.h / this.a;\n\n  if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n    throw new Error();\n  }\n\n  this.radius_g = 1.0 + this.radius_g_1;\n  this.C = this.radius_g * this.radius_g - 1.0;\n\n  if (this.es !== 0.0) {\n    var one_es = 1.0 - this.es;\n    var rone_es = 1 / one_es;\n\n    this.radius_p = Math.sqrt(one_es);\n    this.radius_p2 = one_es;\n    this.radius_p_inv2 = rone_es;\n\n    this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n  } else {\n    this.radius_p = 1.0;\n    this.radius_p2 = 1.0;\n    this.radius_p_inv2 = 1.0;\n\n    this.shape = 'sphere'; // Use as a condition in the forward and inverse functions.\n  }\n\n  if (!this.title) {\n    this.title = 'Geostationary Satellite View';\n  }\n}\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var tmp, v_x, v_y, v_z;\n  lon = lon - this.long0;\n\n  if (this.shape === 'ellipse') {\n    lat = Math.atan(this.radius_p2 * Math.tan(lat));\n    var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n    v_x = r * Math.cos(lon) * Math.cos(lat);\n    v_y = r * Math.sin(lon) * Math.cos(lat);\n    v_z = r * Math.sin(lat);\n\n    if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    tmp = this.radius_g - v_x;\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  } else if (this.shape === 'sphere') {\n    tmp = Math.cos(lat);\n    v_x = Math.cos(lon) * tmp;\n    v_y = Math.sin(lon) * tmp;\n    v_z = Math.sin(lat);\n    tmp = this.radius_g - v_x;\n\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  }\n  p.x = p.x * this.a;\n  p.y = p.y * this.a;\n  return p;\n}\n\nfunction inverse(p) {\n  var v_x = -1.0;\n  var v_y = 0.0;\n  var v_z = 0.0;\n  var a, b, det, k;\n\n  p.x = p.x / this.a;\n  p.y = p.y / this.a;\n\n  if (this.shape === 'ellipse') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n    }\n\n    var v_zp = v_z / this.radius_p;\n    a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n  } else if (this.shape === 'sphere') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n    }\n\n    a = v_y * v_y + v_z * v_z + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n  }\n  p.x = p.x + this.long0;\n  return p;\n}\n\nexport var names = ['Geostationary Satellite View', 'Geostationary_Satellite', 'geos'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from '../common/adjust_lon';\n\nvar A1 = 1.340264,\n  A2 = -0.081106,\n  A3 = 0.000893,\n  A4 = 0.003796,\n  M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n    paramLatSq = paramLat * paramLat,\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat)\n    / (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n    NITER = 12,\n    paramLat = p.y,\n    paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n      break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq))\n    / Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['eqearth', 'Equal Earth', 'Equal_Earth'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lat from '../common/adjust_lat';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\nimport pj_enfn from '../common/pj_enfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport { HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} phi1\n * @property {number} cphi1\n * @property {number} es\n * @property {Array<number>} en\n * @property {number} m1\n * @property {number} am1\n */\n\nvar EPS10 = 1e-10;\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    } else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['bonne', 'Bonne (Werner lat_1=90)'];\nexport default {\n  init: init,\n  names: names\n};\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function (proj4) {\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}\n","import core from './core';\nimport Proj from './Proj';\nimport Point from './Point';\nimport common from './common/toPoint';\nimport defs from './defs';\nimport nadgrid from './nadgrid';\nimport transform from './transform';\nimport mgrs from 'mgrs';\nimport includedProjections from '../projs';\n\n/**\n * @typedef {Object} Mgrs\n * @property {(lonlat: [number, number]) => string} forward\n * @property {(mgrsString: string) => [number, number, number, number]} inverse\n * @property {(mgrsString: string) => [number, number]} toPoint\n */\n\n/**\n * @typedef {import('./defs').ProjectionDefinition} ProjectionDefinition\n * @typedef {import('./core').TemplateCoordinates} TemplateCoordinates\n * @typedef {import('./core').InterfaceCoordinates} InterfaceCoordinates\n * @typedef {import('./core').Converter} Converter\n * @typedef {import('./Proj').DatumDefinition} DatumDefinition\n */\n\n/**\n * @template {import('./core').TemplateCoordinates} T\n * @type {core<T> & {defaultDatum: string, Proj: typeof Proj, WGS84: Proj, Point: typeof Point, toPoint: typeof common, defs: typeof defs, nadgrid: typeof nadgrid, transform: typeof transform, mgrs: Mgrs, version: string}}\n */\nconst proj4 = Object.assign(core, {\n  defaultDatum: 'WGS84',\n  Proj,\n  WGS84: new Proj('WGS84'),\n  Point,\n  toPoint: common,\n  defs,\n  nadgrid,\n  transform,\n  mgrs,\n  version: '__VERSION__'\n});\nincludedProjections(proj4);\nexport default proj4;\n"],"names":["globals","defs","i","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","primeMeridian","units","ignoredChar","match","obj","key","keys","lkey","testkey","processedKey","projStr","defData","self","paramObj","v","a","p","split","paramName","paramVal","paramOutname","params","unit","pm","PrimeMeridian","legalAxis","PROJJSONBuilderBase","node","idNode","child","type","name","conversionFactor","id","direction","abbreviationMatch","abbreviation","orderNode","order","unitNode","axis","b","result","csNode","lengthUnitNode","datumOrEnsembleNode","datumOrEnsemble","primem","member","accuracyNode","ellipsoidNode","param","sourceCrsNode","sourceCrsContent","targetCrsNode","targetCrsContent","transformationNode","scaleDifference","PROJJSONBuilder2015","PROJJSONBuilder2019","usageNode","scope","area","bbox","detectWKT2Version","root","buildPROJJSON","detectWKTVersion","wkt","normalizedWKT","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","text","char","newObjects","parseString","txt","parser","mapit","value","thing","out","newObj","item","sExpr","d2r","input","applyProjectionDefaults","normalizedProjName","processUnit","toValue","valueOrObject","calculateEllipsoid","transformPROJJSON","projjson","to_meter","paramValue","knownTypes","rename","outName","inName","cleanWKT","ii","setPropertiesFromWkt","authority","axisOrder","geogcs","toMeter","ratio","renamer","list","version","lisp","that","def","parseProj","testObj","code","testDef","testWKT","codes","checkMercator","auth","checkProjStr","ext","testProj","parse","maybeProjStr","extend","destination","source","property","msfnz","eccent","sinphi","cosphi","con","sign","x","adjust_lon","tsfnz","phi","com","phi2z","ts","eccnth","dphi","init","forward","lon","lat","y","inverse","names","merc","identity","pt","longlat","projs","projStore","add","proj","len","n","getNormalizedProjName","get","start","projections","ellipsoids","WGS84","Ellipsoid","eccentricity","rf","R_A","a2","b2","es","e","ep2","sphere","ellps","ellipse","datums","datum","datumCode","datum_params","nadgrids","loadedNadgrids","nadgrid","data","options","readNTV2Grid","readGeotiffGrid","includeErrorFields","view","isLittleEndian","detectLittleEndian","header","readHeader","subgrids","readSubgrids","tiff","subGridCount","subgridIndex","image","rasters","lim","imageBBoxRadians","degreesToRadians","del","maxX","minY","latitudeOffsetBand","longitudeOffsetBand","nodes","j","index","secondsToRadians","tifGrid","getNadgrids","grids","parseNadgridString","optional","degrees","seconds","nFields","decodeString","end","gridOffset","subHeader","readGridHeader","readGridNodes","lngColumnCount","latColumnCount","mapNodes","rowSize","r","offset","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","Projection","srsCode","callback","error","json","parseCode","ourProj","datumDef","Datum","sphere_","dc_sphere","ecc","dc_eccentricity","datumObj","compareDatums","dest","geodeticToGeocentric","Longitude","Latitude","Height","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","geocentricToGeodetic","genau","genau2","maxiter","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","geocentricToWgs84","datum_type","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","datum_transform","point","source_a","source_es","gridShiftCode","applyGridShift","dest_a","dest_b","dest_es","destGridShiftResult","output","attemptedGrids","outer","grid","jj","subgrid","epsilon","minX","maxY","applySubgridShift","pin","ct","val","tb","t","nadInterpolate","tol","dif","indx","frct","inx","f00","f10","f11","f01","m11","m10","m00","m01","adjust_axis","crs","denorm","xin","yin","zin","common","array","checkSanity","checkCoord","num","checkNotWGS","transform","enforceAxis","wgs84","toPoint","hasZ","transformer","from","to","coords","transformedArray","checkProj","proj4","fromProjOrToProj","toProjOrCoord","coord","fromProj","toProj","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","ll","accuracy","encode","LLtoUTM","UTMtoLL","decode","degToRad","deg","radToDeg","rad","Lat","Long","eccSquared","k0","LongOrigin","eccPrimeSquared","N","T","C","M","LatRad","LongRad","LongOriginRad","ZoneNumber","UTMEasting","UTMNorthing","getLetterDesignator","utm","zoneLetter","zoneNumber","e1","N1","T1","C1","R1","D","mu","phi1Rad","topRight","LetterDesignator","seasting","snorthing","get100kID","easting","northing","setParm","get100kSetForZone","setColumn","setRow","getLetter100kID","column","row","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","twoLetter","mgrsString","length","hunK","sb","testChar","set","east100k","getEastingFromChar","north100k","getNorthingFromChar","getMinNorthing","remainder","sep","sepEasting","sepNorthing","accuracyBonus","sepEastingString","sepNorthingString","curCol","eastingValue","rewindMarker","curRow","northingValue","Point","z","mgrsStr","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","pj_enfn","en","pj_mlfn","sphi","cphi","MAX_ITER","pj_inv_mlfn","arg","k","s","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","tan_phi","d","ds","f","g","temp","h","tmerc","sinh","hypot","log1py","asinhy","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr1","hr2","hr","cosh","clens_cmplx","arg_i","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","hi","hi2","np","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","tmp","etmerc","adjust_zone","zone","dependsOn","srat","esinp","exp","DEL_TOL","gauss","sinc","cosc","cosl","rho","sterea","ssfn_","phit","eccen","sinlat","coslat","sinX","cosX","rh","dlon","ce","Chi","stere","phy0","sinPhy0","semiMajorAxis","invF","flattening","e2","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","somerc","TOL","isTypeA","typeAProjections","projectionName","cosph0","F","H","L","sinph0","J","gamma","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","alp","gam","one_es","U","W","u","Qp","Sp","Tp","Vp","Up","omerc","sin1","cos1","ms1","ts1","sin2","cos2","ms2","ts2","ts0","rh1","theta","lcc","gfi","deltav","eps","ro","fi1","ok","krovak","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","lam","nl","tl","asq","cl","dd","ml1","nl1","rl1","tl1","dl","dsq","cass","qsfnz","S_POLE","N_POLE","EQUIT","OBLIQ","authset","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","laea","asinz","qs","phi1z","eccnts","aea","coslon","ksp","gnom","iqsfnz","cea","dlat","eqc","el","bl","tanphi","mln","mlnp","ma","poly","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_re","th_im","th_n_re","th_n_im","th_n_re1","th_n_im1","z_re","z_im","delta_x","delta_y","z_n_re","z_n_im","z_n_re1","z_n_im1","num_re","num_im","den_re","den_im","den2","d_psi_n","nzmg","mill","sinu","delta_theta","moll","eqdc","sinth","costh","gsq","m","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","vandg","vincentyInverse","lat1","lon1","lat2","lon2","U1","U2","sinU1","cosU1","sinU2","cosU2","lambdaP","iterLimit","sinLambda","cosLambda","sinSigma","cosSigma","sigma","sinAlpha","cos2Alpha","cos2SigmaM","uSq","deltaSigma","vincentyDirect","azi1","s12","sinAlpha1","cosAlpha1","sigma1","sigmaP","Mlp","Ml","kp","cos_c","vars","aeqd","ortho","FACE_ENUM","AREA_ENUM","xy","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","lp","nu","cosmu","tannu","tantheta","invert_sign","xa","slon","qsc","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","robin","geocent","mode","omega","yt","ba","bm","bq","tpers","rone_es","v_x","v_y","v_z","det","v_zp","geos","A1","A2","A3","A4","paramLat","paramLatSq","paramLatPow6","EPS","NITER","fy","fpy","eqearth","EPS10","e_inv","e_fwd","s_inv","s_fwd","E","bonne","includedProjections","core","Proj"],"mappings":"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QAAS,QACT,UAAW,OACf,EACE,OAAQ,CACN,QAAS,yBACT,QAAS,SACT,UAAW,OACf,EACE,OAAQ,CACN,QAAS,uBACT,QAAS,QACT,UAAW,sCACf,EACE,MAAO,CACL,QAAS,QACT,QAAS,QACT,UAAW,2BACf,EACE,MAAO,CACL,SAAU,2CACV,QAAS,SACT,UAAW,2BACf,EACE,QAAS,CACP,QAAS,0CACT,QAAS,SACT,UAAW,6BACf,EACE,SAAU,CACR,QAAS,mBACT,QAAS,UACT,UAAW,uBACf,EACE,cAAe,CACb,QAAS,kDACT,QAAS,SACT,UAAW,eACf,EACE,IAAK,CACH,QAAS,kDACT,QAAS,SACT,UAAW,gCACf,EACE,OAAQ,CACN,QAAS,qDACT,QAAS,OACT,UAAW,gBACf,EACE,MAAO,CACL,QAAS,qDACT,QAAS,WACT,UAAW,cACf,EACE,WAAY,CACV,QAAS,yBACT,QAAS,OACT,UAAW,YACf,EACE,OAAQ,CACN,QAAS,6CACT,QAAS,OACT,UAAW,iCACf,EACE,OAAQ,CACN,QAAS,yDACT,QAAS,OACT,UAAW,uCACf,EACE,OAAQ,CACN,QAAS,aACT,QAAS,SACT,UAAW,gBACf,EACE,SAAU,CACR,QAAS,eACT,QAAS,SACT,UAAW,UACf,EACE,cAAe,CACb,QAAS,cACT,QAAS,SACT,UAAW,uBACf,EACE,MAAO,CACL,QAAS,wDACT,QAAS,OACT,UAAW,4BACf,EACE,UAAW,CACT,QAAS,iDACb,EACE,YAAa,CACX,QAAS,qDACb,EACE,UAAW,CACT,QAAS,oEACb,EACE,UAAW,CACT,QAAS,qDACb,EACE,WAAY,CACV,QAAS,oDACb,EACE,WAAY,CACV,QAAS,mDACb,EACE,WAAY,CACV,QAAS,kDACb,EACE,UAAW,CACT,QAAS,6CACb,EACE,UAAW,CACT,QAAS,oDACb,EACE,UAAW,CACT,QAAS,qDACb,EACE,UAAW,CACT,QAAS,qDACb,EACE,UAAW,CACT,QAAS,0CACb,EACE,UAAW,CACT,QAAS,gDACb,EACE,UAAW,CACT,QAAS,oDACb,EACE,UAAW,CACT,QAAS,+CACb,EACE,UAAW,CACT,QAAS,uDACb,EACE,UAAW,CACT,QAAS,8CACb,EACE,UAAW,CACT,QAAS,uDACb,EACE,UAAW,CACT,QAAS,kDACb,EACE,UAAW,CACT,QAAS,kDACb,EACE,UAAW,CACT,QAAS,4CACb,EACE,UAAW,CACT,QAAS,yCACb,EACE,UAAW,CACT,QAAS,0DACb,EACE,UAAW,CACT,QAAS,6DACb,EACE,UAAW,CACT,QAAS,gDACb,EACE,UAAW,CACT,QAAS,yBACb,EACE,UAAW,CACT,QAAS,yCACb,EACE,UAAW,CACT,QAAS,8CACb,EACE,UAAW,CACT,QAAS,6CACb,EACE,UAAW,CACT,QAAS,0DACb,EACE,UAAW,CACT,QAAS,0BACb,EACE,UAAW,CACT,QAAS,gBACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,mEACb,EACE,UAAW,CACT,QAAS,wDACb,EACE,UAAW,CACT,QAAS,2DACb,EACE,UAAW,CACT,QAAS,4DACb,EACE,UAAW,CACT,QAAS,8CACb,EACE,UAAW,CACT,QAAS,8CACb,EACE,UAAW,CACT,QAAS,+DACb,EACE,UAAW,CACT,QAAS,uDACb,EACE,UAAW,CACT,QAAS,iEACb,EACE,UAAW,CACT,QAAS,0DACb,EACE,UAAW,CACT,QAAS,qDACb,EACE,UAAW,CACT,QAAS,oDACb,EACE,UAAW,CACT,QAAS,mDACb,EACE,UAAW,CACT,QAAS,qDACb,EACE,UAAW,CACT,QAAS,uDACb,EACE,UAAW,CACT,QAAS,oDACb,EACE,UAAW,CACT,QAAS,8BACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,oDACb,EACE,UAAW,CACT,QAAS,mDACb,EACE,UAAW,CACT,QAAS,qDACb,EACE,YAAa,CACX,QAAS,qDACb,EACE,UAAW,CACT,QAAS,0BACb,EACE,UAAW,CACT,QAAS,SACb,EACE,UAAW,CACT,QAAS,SACb,EACE,UAAW,CACT,QAAS,mDACb,EACE,UAAW,CACT,QAAS,kDACb,EACE,UAAW,CACT,QAAS,2CACb,EACE,UAAW,CACT,QAAS,4DACb,EACE,UAAW,CACT,QAAS,uDACb,EACE,UAAW,CACT,QAAS,SACb,EACE,UAAW,CACT,QAAS,sCACb,EACE,UAAW,CACT,QAAS,qBACb,EACE,UAAW,CACT,QAAS,sCACb,EACE,YAAa,CACX,QAAS,6CACb,EACE,UAAW,CACT,QAAS,6CACb,EACE,UAAW,CACT,QAAS,8CACb,EACE,UAAW,CACT,QAAS,iEACb,EACE,UAAW,CACT,QAAS,0DACb,EACE,UAAW,CACT,QAAS,mBACb,EACE,UAAW,CACT,QAAS,mBACb,EACE,UAAW,CACT,QAAS,yBACb,EACE,UAAW,CACT,QAAS,YACb,EACE,UAAW,CACT,QAAS,+CACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,eACb,EACE,UAAW,CACT,QAAS,oDACb,EACE,UAAW,CACT,QAAS,kDACb,EACE,UAAW,CACT,QAAS,sDACb,EACE,UAAW,CACT,QAAS,gDACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,wDACb,EACE,UAAW,CACT,QAAS,oDACb,EACE,UAAW,CACT,QAAS,oDACb,EACE,UAAW,CACT,QAAS,6DACb,EACE,UAAW,CACT,QAAS,yDACb,EACE,UAAW,CACT,QAAS,qDACb,EACE,UAAW,CACT,QAAS,sDACb,EACE,UAAW,CACT,QAAS,kBACb,EACE,UAAW,CACT,QAAS,gEACb,EACE,UAAW,CACT,QAAS,yDACb,EACE,UAAW,CACT,QAAS,sDACb,EACE,UAAW,CACT,QAAS,mDACb,EACE,UAAW,CACT,QAAS,qDACb,EACE,UAAW,CACT,QAAS,sBACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,qDACb,EACE,UAAW,CACT,QAAS,wBACb,EACE,UAAW,CACT,QAAS,uDACb,EACE,UAAW,CACT,QAAS,qDACb,EACE,UAAW,CACT,QAAS,gDACb,EACE,UAAW,CACT,QAAS,qDACb,EACE,UAAW,CACT,QAAS,kDACb,EACE,UAAW,CACT,QAAS,2DACb,EACE,UAAW,CACT,QAAS,qDACb,EACE,UAAW,CACT,QAAS,kDACb,EACE,UAAW,CACT,QAAS,kBACb,EACE,UAAW,CACT,QAAS,2DACb,EACE,UAAW,CACT,QAAS,oBACb,EACE,UAAW,CACT,QAAS,gDACb,EACE,UAAW,CACT,QAAS,oDACb,EACE,YAAa,CACX,QAAS,kDACb,EACE,YAAa,CACX,QAAS,OACb,EACE,UAAW,CACT,QAAS,sBACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,kDACb,EACE,UAAW,CACT,QAAS,iDACb,EACE,UAAW,CACT,QAAS,qDACb,EACE,UAAW,CACT,QAAS,qBACb,EACE,UAAW,CACT,QAAS,oDACb,EACE,UAAW,CACT,QAAS,uEACb,EACE,UAAW,CACT,QAAS,4CACb,EACE,UAAW,CACT,QAAS,qBACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,2DACb,EACE,YAAa,CACX,QAAS,cACb,EACE,YAAa,CACX,QAAS,cACb,EACE,WAAY,CACV,QAAS,WACb,EACE,UAAW,CACT,QAAS,sBACb,EACE,YAAa,CACX,QAAS,0BACb,EACE,YAAa,CACX,QAAS,2BACb,EACE,YAAa,CACX,QAAS,mBACb,EACE,YAAa,CACX,QAAS,QACb,EACE,UAAW,CACT,QAAS,cACb,EACE,cAAe,CACb,QAAS,eACb,EACE,YAAa,CACX,QAAS,mBACb,EACE,aAAc,CACZ,QAAS,eACb,EACE,YAAa,CACX,QAAS,cACb,EACE,aAAc,CACZ,QAAS,eACb,EACE,aAAc,CACZ,QAAS,aACb,EACE,YAAa,CACX,QAAS,WACb,EACE,aAAc,CACZ,QAAS,WACb,EACE,gBAAiB,CACf,QAAS,aACb,EACE,aAAc,CACZ,QAAS,eACb,EACE,aAAc,CACZ,QAAS,eACb,EACE,YAAa,CACX,QAAS,eACb,EACE,YAAa,CACX,QAAS,cACb,EACE,WAAY,CACV,QAAS,YACb,EACE,cAAe,CACb,QAAS,sBACb,EACE,cAAe,CACb,QAAS,qBACb,EACE,aAAc,CACZ,QAAS,qBACb,EACE,YAAa,CACX,QAAS,kBACb,EACE,aAAc,CACZ,QAAS,uBACb,EACE,aAAc,CACZ,QAAS,sBACb,EACE,aAAc,CACZ,QAAS,eACb,EACE,eAAgB,CACd,QAAS,qBACb,EACE,aAAc,CACZ,QAAS,oBACb,EACE,aAAc,CACZ,QAAS,sBACb,EACE,aAAc,CACZ,QAAS,uBACb,EACE,UAAW,CACT,QAAS,wBACb,EACE,UAAW,CACT,QAAS,6BACb,EACE,YAAa,CACX,QAAS,aACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,sBACb,EACE,UAAW,CACT,QAAS,wBACb,EACE,UAAW,CACT,QAAS,wBACb,EACE,UAAW,CACT,QAAS,oBACb,EACE,UAAW,CACT,QAAS,mBACb,EACE,UAAW,CACT,QAAS,oBACb,EACE,UAAW,CACT,QAAS,kBACb,EACE,UAAW,CACT,QAAS,qBACb,EACE,UAAW,CACT,QAAS,eACb,EACE,UAAW,CACT,QAAS,sBACb,EACE,UAAW,CACT,QAAS,kBACb,EACE,UAAW,CACT,QAAS,wBACb,EACE,UAAW,CACT,QAAS,uBACb,EACE,UAAW,CACT,QAAS,sBACb,EACE,UAAW,CACT,QAAS,yBACb,EACE,UAAW,CACT,QAAS,2BACb,EACE,UAAW,CACT,QAAS,uBACb,EACE,UAAW,CACT,QAAS,yBACb,EACE,UAAW,CACT,QAAS,wBACb,EACE,UAAW,CACT,QAAS,oBACb,EACE,UAAW,CACT,QAAS,yBACb,EACE,UAAW,CACT,QAAS,gBACb,EACE,UAAW,CACT,QAAS,sBACb,EACE,UAAW,CACT,QAAS,wBACb,EACE,UAAW,CACT,QAAS,uBACb,EACE,UAAW,CACT,QAAS,yBACb,EACE,UAAW,CACT,QAAS,YACb,EACE,UAAW,CACT,QAAS,yBACb,EACE,UAAW,CACT,QAAS,mBACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,qBACb,EACE,UAAW,CACT,QAAS,qBACb,EACE,UAAW,CACT,QAAS,oBACb,EACE,UAAW,CACT,QAAS,qBACb,EACE,UAAW,CACT,QAAS,kBACb,EACE,UAAW,CACT,QAAS,mBACb,EACE,UAAW,CACT,QAAS,4BACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,yBACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,uBACb,EACE,UAAW,CACT,QAAS,sBACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,0BACb,EACE,UAAW,CACT,QAAS,yBACb,EACE,UAAW,CACT,QAAS,uBACb,EACE,UAAW,CACT,QAAS,sBACb,EACE,UAAW,CACT,QAAS,oBACb,EACE,UAAW,CACT,QAAS,YACb,EACE,UAAW,CACT,QAAS,YACb,EACE,UAAW,CACT,QAAS,sBACb,EACE,UAAW,CACT,QAAS,kBACb,EACE,UAAW,CACT,QAAS,mBACb,EACE,UAAW,CACT,QAAS,qBACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,YACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,YACb,EACE,UAAW,CACT,QAAS,YACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,gBACb,EACE,UAAW,CACT,QAAS,WACb,EACE,UAAW,CACT,QAAS,YACb,EACE,UAAW,CACT,QAAS,0BACb,EACE,UAAW,CACT,QAAS,gBACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,WACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,WACb,EACE,UAAW,CACT,QAAS,uBACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,qBACb,EACE,UAAW,CACT,QAAS,eACb,EACE,UAAW,CACT,QAAS,cACb,EACE,YAAa,CACX,QAAS,eACb,EACE,UAAW,CACT,QAAS,WACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,gBACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,YACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,gBACb,EACE,UAAW,CACT,QAAS,WACb,EACE,UAAW,CACT,QAAS,YACb,EACE,UAAW,CACT,QAAS,WACb,EACE,UAAW,CACT,QAAS,eACb,EACE,UAAW,CACT,QAAS,YACb,EACE,UAAW,CACT,QAAS,qBACb,EACE,UAAW,CACT,QAAS,YACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,eACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,eACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,YACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,eACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,eACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,eACb,EACE,UAAW,CACT,QAAS,aACb,EACE,UAAW,CACT,QAAS,eACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,gBACb,EACE,UAAW,CACT,QAAS,eACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,eACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,YACb,EACE,UAAW,CACT,QAAS,WACb,EACE,UAAW,CACT,QAAS,aACb,EACE,WAAY,CACV,QAAS,eACb,EACE,WAAY,CACV,QAAS,YACb,EACE,WAAY,CACV,QAAS,eACb,EACE,UAAW,CACT,QAAS,eACb,EACE,YAAa,CACX,QAAS,cACb,EACE,UAAW,CACT,QAAS,YACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,eACb,EACE,UAAW,CACT,QAAS,sBACb,EACE,UAAW,CACT,QAAS,eACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,cACb,EACE,UAAW,CACT,QAAS,eACb,EACE,cAAe,CACb,QAAS,OACb,EACE,cAAe,CACb,QAAS,OACb,EACE,gBAAiB,CACf,QAAS,OACb,EACE,iBAAkB,CAChB,QAAS,OACb,EACE,eAAgB,CACd,QAAS,OACb,EACE,WAAY,CACV,QAAS,OACb,EACE,aAAc,CACZ,QAAS,OACb,EACE,aAAc,CACZ,QAAS,OACb,EACE,cAAe,CACb,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAAS,OACb,EACE,UAAW,CACT,QAA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]}